
<%- include('./includes/head.ejs') -%>
<%- include('./includes/navigation.ejs') -%>

<%- include('./includes/header.ejs') -%>
<%- include('./components/figurecards.ejs') -%>

</div>
</div>
</div>
<div class="container-fluid mt--6">
  <div class="row">
      <div class="col-xl-3">
          <div class="card">
              <div class="card-header bg-transparent">
                  <div class="row align-items-center">
                      <div class="col">
                          <h6 class="text-uppercase text-muted ls-1 mb-1">Truck <span id="selectedtruck"></span></h6>
                          <!-- <h5 class="h3 text-white mb-0">Sales value</h5> -->
                      </div>
                  </div>
              </div>
              <style>
                .card-body {
  font-family: Arial, sans-serif;
}

#searchTruck {
  margin-bottom: 10px;
}

#truckContainer > div:hover {
  background-color: #f0f0f0;
}

              </style>
              <!-- <div class="card-body" style="height: 50vh;">
                <div style="width: 100%;height: 70px;border-radius: 5px;box-shadow: 2px 1px 5px;margin-bottom: 5px;padding: 10px;">

                    <label for="">Truck Id</label> <br>
                    <label for="">Sales Person</label>

                </div>
                <div style="width: 100%;height: 70px;border-radius: 5px;box-shadow: 2px 1px 5px;margin-bottom: 5px;padding: 10px;">

                    <label for="">Truck Id</label> <br>
                    <label for="">Sales Person</label>
                </div>
              </div> -->
              <div class="card-body" style="height: 50vh; overflow-y: auto;">
                <div style="margin-bottom: 10px;">
                  <input
                    type="text"
                    id="searchTruck"
                    placeholder="Search Truck ID"
                    style="width: 100%; padding: 8px; border-radius: 5px; border: 1px solid #ccc;"
                  />
                </div>
                <div id="truckContainer">
                  <!-- Truck cards will be dynamically appended here -->
                </div>
              </div>
          </div>
      </div>
      <script>
        // Fetch trucks from the backend and render them
        async function fetchTrucks(searchQuery = "",) {
          try {
            const city = document.getElementById("city").value
            console.log(city)
            const response = await fetch(`/gettrucknames?search=${searchQuery}&city=${city}`);
            const trucks = await response.json();
            const truckContainer = document.getElementById("truckContainer");
            truckContainer.innerHTML = ""; // Clear previous data
      
            trucks.forEach((truck) => {
              const truckDiv = document.createElement("div");
              truckDiv.style.cssText =
                "width: 100%; height: 70px; border-radius: 5px; box-shadow: 2px 1px 5px; margin-bottom: 5px; padding: 10px; cursor: pointer;";
               
              truckDiv.onclick = () => {
                document.getElementById('selectedtruck').innerText = ' - '+ truck.id;
                fetchDashboardData(truck.id)};
      
              truckDiv.innerHTML = `
                <label>Truck ID: ${truck.id}</label> <br>
                <label>Sales Person ID: ${truck.salesmanId || "N/A"}</label>
              `;
              truckContainer.appendChild(truckDiv);
            });
          } catch (error) {
            console.error("Error fetching trucks:", error);
          }
        }
      
        // Call this function when the page loads
        document.addEventListener("DOMContentLoaded", () => fetchTrucks());
      
        // Add search functionality
        // document.getElementById("searchTruck").addEventListener("input", (event) => {
        //   const searchQuery = event.target.value;
        //   fetchTrucks(searchQuery);
        // });
      
        // // Example function for handling truck dashboard display
        // function showDashboard(truckId) {
        //   alert(`Showing dashboard for Truck ID: ${truckId}`);
        //   // Add logic to redirect or display the truck dashboard
        // }
        // document.addEventListener("DOMContentLoaded", () => fetchTrucks());

// Update truck list when city selection changes



      </script>
      <div class="col-xl-5">
          <div class="card bg-default">
              <div class="card-header bg-transparent">
                  <div class="row align-items-center">
                      <div class="col">
                          <h6 class="text-light text-uppercase ls-1 mb-1">Overview</h6>
                          <h5 class="h3 text-white mb-0">Sales value</h5>
                      </div>
                      <!-- <div class="col">
                          <ul class="nav nav-pills justify-content-end">
                              <li class="nav-item mr-2 mr-md-0" data-toggle="chart"
                                  data-target="#chart-sales-dark"
                                  data-update='{"data":{"datasets":[{"data":[0, 20, 10, 30, 15, 40, 20, 60, 60]}]}}'
                                  data-prefix="$" data-suffix="k">
                                  <a href="#" class="nav-link py-2 px-3 active" data-toggle="tab">
                                      <span class="d-none d-md-block">Month</span>
                                      <span class="d-md-none">M</span>
                                  </a>
                              </li>
                              <li class="nav-item" data-toggle="chart" data-target="#chart-sales-dark"
                                  data-update='{"data":{"datasets":[{"data":[0, 20, 5, 25, 10, 30, 15, 40, 40]}]}}'
                                  data-prefix="$" data-suffix="k">
                                  <a href="#" class="nav-link py-2 px-3" data-toggle="tab">
                                      <span class="d-none d-md-block">Week</span>
                                      <span class="d-md-none">W</span>
                                  </a>
                              </li>
                          </ul>
                      </div> -->
                  </div>
              </div>
              <div class="card-body">
                  <!-- Chart -->
                  <div class="chart">
                      <!-- Chart wrapper -->
                      <canvas id="chart-sales-dark" class="chart-canvas"></canvas>
                  </div>
              </div>
          </div>
      </div>
      <div class="col-xl-4">
          <div class="card">
              <div class="card-header bg-transparent">
                  <div class="row align-items-center">
                      <div class="col">
                          <h6 class="text-uppercase text-muted ls-1 mb-1">Performance</h6>
                          <h5 class="h3 mb-0">Total orders</h5>
                      </div>
                  </div>
              </div>
              <div class="card-body">
                  <!-- Chart -->
                  <div class="chart">
                      <canvas id="chart-bar" class="chart-canvas"></canvas>
                  </div>
              </div>
          </div>
      </div>
  </div>
  <script src="/assets/vendor/jquery.scrollbar/jquery.scrollbar.min.js"></script>
<script src="/assets/vendor/jquery-scroll-lock/dist/jquery-scrollLock.min.js"></script>
   <!-- Footer -->
   <script src="/assets/vendor/js-cookie/js.cookie.js"></script>
<!-- Optional JS -->
<script src="assets/vendor/chart.js/dist/Chart.min.js"></script>
<script src="assets/vendor/chart.js/dist/Chart.extension.js"></script>  

<script src="assets/js/argon.js?v=1.2.1"></script>
<%- include('./includes/footer.ejs') -%>
<script>
var SalesChart = (function() {
       let truck = truckids||'All';
       let fromDate = $("#fromDate").val();
       let toDate = $("#toDate").val();
       if (!fromDate || !toDate) {
        let { startOfMonth, endOfMonth } = getDefaultMonthDates();
        fromDate = startOfMonth;
        toDate = endOfMonth;
    }
      // Variables
  var $chart = $('#chart-sales-dark');
  fetchSalesData(fromDate, toDate, truck);     
  // Method to fetch sales data and update the chart
  function fetchSalesData(fromDate, toDate, truckId) {
    $.ajax({
      url: '/sales-data',
      type: 'GET',
      data: { fromDate: fromDate, toDate: toDate, truckId: truckId },
      dataType: 'json',
      success: function(response) {
        updateChart(response.labels, response.data);
      },
      error: function(xhr, status, error) {
        console.error("Error fetching sales data:", error);
      }
    });
  }

  // Method to update the chart with new data
  function updateChart(labels, data) {
    var salesChart = $chart.data('chart');

    // Update the chart's labels and data dynamically
    salesChart.data.labels = labels;
    salesChart.data.datasets[0].data = data;

    // Re-render the chart
    salesChart.update();
  }

  // Method to initialize the chart
  function init($this) {
    var salesChart = new Chart($this, {
      type: 'line',
      options: {
        scales: {
          yAxes: [{
            gridLines: {
              color: Charts.colors.gray[700],
              zeroLineColor: Charts.colors.gray[700]
            },
            ticks: {
              beginAtZero: true,
            }
          }]
        }
      },
      data: {
        labels: [], // Will be dynamically updated
        datasets: [{
          label: 'Sales Performance',
          data: [] // Will be dynamically updated
        }]
      }
    });

    // Save chart instance to the DOM element
    $this.data('chart', salesChart);
  }

  // Events
  if ($chart.length) {
    init($chart);

    // Initialize filter and update chart on filter change
    $("#applyFilterBtn").click(function() {
      var fromDate = $("#fromDate").val();
      var toDate = $("#toDate").val();
   

      fetchSalesData(fromDate, toDate, truckids);
    
    });
  }

})();

</script>
<script>
async function fetchOrderData(startDate, endDate, truckId = '', area = '') {
    try {
        const response = await fetch(`/getOrdersCount?startDate=${startDate}&endDate=${endDate}&truckId=${truckId}&area=${area}`);
        const data = await response.json();

        // Process data for Chart.js
        const labels = data.map(entry => entry._id);
        const values = data.map(entry => entry.totalOrders);

        updateChart(labels, values);
    } catch (error) {
        console.error('Error fetching order data:', error);
    }
}

function updateChart(labels, data) {
    var ctx = document.getElementById('chart-bar').getContext('2d');

    if (window.ordersChart) {
        window.ordersChart.destroy(); // Destroy old chart before creating a new one
    }

    window.ordersChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [{
                label: 'Orders',
                data: data,
                backgroundColor: 'rgba(54, 162, 235, 0.6)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            scales: {
                y: { beginAtZero: true }
            }
        }
    });
}

// Example Usage:
fetchOrderData('2024-01-01', '2025-02-01'); // Pass date range dynamically


// var BarsChart = (function() {

// //
// // Variables
// //

// var $chart = $('#chart-bars');


// //
// // Methods
// //

// // Init chart
// function initChart($chart) {

//   // Create chart
//   var ordersChart = new Chart($chart, {
//     type: 'bar',
//     data: {
//       labels: ['Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
//       datasets: [{
//         label: 'Sales',
//         data: [25, 20, 30, 22, 17, 29]
//       }]
//     }
//   });

//   // Save to jQuery object
//   $chart.data('chart', ordersChart);
// }


// // Init chart
// if ($chart.length) {
//   initChart($chart);
// }

// })();
</script>
<script src="/assets/vendor/chart.js/dist/Chart.min.js"></script>
<script src="/assets/vendor/chart.js/dist/Chart.extension.js"></script>  

<%- include('./includes/end.ejs') -%>