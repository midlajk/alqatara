
<%- include('../includes/head.ejs') -%>
<%- include('../includes/navigation.ejs') -%>

<%- include('../includes/header.ejs') -%>
<%- include('../components/searchbartr.ejs') -%>
<style>
  /* Scoped styles for custom-nav-tabs */
  .custom-nav-tabs {
    display: flex;
    gap: 10px;
    /* Add space between tabs for clear distinction */
    padding: 0;
    margin: 0;
    list-style: none;
  }



  .custom-nav-tabs .nav-link {
    text-align: center;
    padding: 10px 15px;
    color: #000000;
    /* Slightly darker version of #61A3C0 */
    font-weight: bold;
    border: 1px solid #d1d9de;
    /* Subtle border for separation */
    border-radius: 5px;
    background-color: #e7e7e7;
    /* Light background to distinguish tabs */
    transition: all 0.3s ease;
  }

  .custom-nav-tabs {
    border-bottom: 0px;
  }

  .custom-nav-tabs .nav-link:hover {
    color: #ffffff;
    background-color: #61A3C0;
    /* Your primary color */
  }

  .custom-nav-tabs .nav-link.active {
    color: #ffffff;
    background-color: #4d8da9;
    /* Slightly darker primary color */
    border-color: #61A3C0;
  }
</style>
<a href="/utilities/addtruck?customKey=utilities" class="btn btn-danger ml-3" type="button" aria-label="Add New">Add New Truck</a>
</div>
</div>
</div>
</div>
</div>
<div class="container-fluid mt--6">
    <div class="row">
      <div class="col">
        <div class="card">
          <!-- Card header -->
        
          <!-- Light table -->
          <style>
            .tab-button {
              padding: 10px 15px;
              border: 1px solid #ccc;
              cursor: pointer;
              background: #e7e7e7;
              font-weight: bold;
              margin-right: 5px;
              transition: 0.3s;
            }
          
            .tab-button.active {
              background: #4d8da9;
              color: #ffffff;
            }
          
            .report-table {
              display: none;
            }
          
            .report-table.active {
              display: block;
            }
          </style>
          
          <div>
            <a class="tab-button" href="/inventorymanagement" data-table="salesmanTable">Store Management</a>
            <a class="tab-button active" href="/utilities" data-table="customerTable">Car Stock Transaction</a>
           
          </div>
          <br>
          <div class="card-header border-0">
            <h3 class="mb-0">Truck Delivery and Details</h3>
          </div>
          <div  class="table-responsive">
            <table id="truckTable"  class="table align-items-center table-flush">
              <thead class="thead-light">
                <tr>
                  <th scope="col" class="sort" data-sort="name">Truck ID</th>
                  <th scope="col" class="sort" data-sort="budget">In-Charge</th>
                  <!-- <th scope="col" class="sort" data-sort="status">Today's 5 gallon bottle delivery</th>
                  <th scope="col" class="sort">200ML bottles Delivered</th>
                  <th scope="col" class="sort" data-sort="completion">Bottle Balance</th>
                  <th scope="col" class="sort">Damaged 5-Gallon Bottles</th> -->
                  <th scope="col" class="sort" data-sort="completion">Last Updated</th>
                  <th scope="col" class="sort">View Stock</th>

                  <th scope="col" class="sort" data-sort="completion">Manage Stock</th>
                  <!-- <th scope="col" class="sort" data-sort="completion">Close Stocke</th> -->

                  <th scope="col">Edit Truck</th>
                </tr>
              </thead>
              <tbody class="list">
                <tr>
                  
                </tr>
              </tbody>
            </table>
          </div>
          <!-- Card footer -->
          <!-- <div class="card-footer py-4">
            <nav aria-label="...">
              <ul class="pagination justify-content-end mb-0">
                <li class="page-item disabled">
                  <a class="page-link" href="#" tabindex="-1">
                    <i class="fas fa-angle-left"></i>
                    <span class="sr-only">Previous</span>
                  </a>
                </li>
                <li class="page-item active">
                  <a class="page-link" href="#">1</a>
                </li>
                <li class="page-item">
                  <a class="page-link" href="#">2 <span class="sr-only">(current)</span></a>
                </li>
                <li class="page-item"><a class="page-link" href="#">3</a></li>
                <li class="page-item">
                  <a class="page-link" href="#">
                    <i class="fas fa-angle-right"></i>
                    <span class="sr-only">Next</span>
                  </a>
                </li>
              </ul>
            </nav>
          </div> -->
        </div>
      </div>
    </div>
    <!-- Footer -->

<!-- Sales Details Modal -->
<div class="modal fade" id="salesZoneModal" tabindex="-1" aria-labelledby="salesZoneModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-xl">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="salesZoneModalLabel">Truck Stock Details</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <table class="table table-bordered ">
          <thead>
            <tr>
              <th>Item</th>
              <th>Total Load</th>
              <th>Quantity Delivered</th>
              <th>Quantity Returned</th>
              <th>Damaged Quantity</th>
              <th>Available</th>
            </tr>
          </thead>
          <tbody id="salesZoneTableBody">
            <tr>
              <td>Water Cup</td>
              <td>1000 Cups</td>
              <td>900 Cups</td>
              <td>50 Cups</td>
              <td>20 Cups</td>
              <td>30 Cups</td>
            </tr>
            <tr>
              <td>200 ml Bottle</td>
              <td>500 Bottles</td>
              <td>450 Bottles</td>
              <td>30 Bottles</td>
              <td>10 Bottles</td>
              <td>60 Bottles</td>
            </tr>
            <tr>
              <td>5 Gallon Bottle</td>
              <td>300 Bottles</td>
              <td>250 Bottles</td>
              <td>20 Bottles</td>
              <td>5 Bottles</td>
              <td>25 Bottles</td>
            </tr>
            <tr>
              <td>Dispenser</td>
              <td>50 Units</td>
              <td>40 Units</td>
              <td>5 Units</td>
              <td>2 Units</td>
              <td>8 Units</td>
            </tr>
          </tbody>
        </table>
        
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" data-dismiss="modal">Print Details</button>

        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

 
 <!-- Load jQuery first -->
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>

<script src="https://cdn.datatables.net/1.13.4/js/dataTables.bootstrap4.min.js"></script>

<script>
  $(document).ready(function () {
    
    // Initialize DataTable
   var datatable = $('#truckTable').DataTable({
    responsive: true,
          processing: true,
          serverSide: true,
      ajax: {
        url: '/gettrucks', // Backend API endpoint
        dataSrc: 'docs', // Key that holds the array of data in the API response
        // headers: { "x-custom-key": "utilities" }, // Example: Sending key in headers

            data: function (d) {
              return d;
  
              // Add any additional parameters you want to send to the server here
            },// Data source is the root of the response array
      },
      columns: [
  { data: 'id', render: data => data ? data : 'N/A' }, // Truck ID
  { data: 'salesmanId', render: data => data ? data : 'N/A' }, // In-Charge
 
  { 
    data: 'updatedAt', // Last Delivery Date and Time
    render: function (data) {
      return data ? new Date(data).toLocaleString() : 'N/A';
    }
  },
  { 
    data: null, 
    orderable: false, // Prevent sorting on this column
    searchable: false, // Prevent search filter on buttons
    render: function(data, type, row) {
      return `
        <button class="btn btn-secondary viewsaleszone-zone" data-id="${row._id}">View Stock</button>
      `;
    }
  },

  { 
    data: null, 
    orderable: false, // Prevent sorting on this column
    searchable: false, // Prevent search filter on buttons
    render: function(data, type, row) {
      return `
        <button class="btn btn-primary updatestock-zone" data-id="${row._id}">Manage Stock</button>
      `;
    }
  },

  { 
    data: null, 
    orderable: false, // Prevent sorting on this column
    searchable: false, // Prevent search filter on buttons
    render: function(data, type, row) {
      return `
        <button class="btn btn-danger edit-zone" data-id="${row._id}">Edit</button>
        <button class="btn btn-green history-zone" data-id="${row.id}">History</button>
      `;
    }
  }
]

    });
    $('#truckTable tbody').on('click', '.edit-zone', function () {
        var truckId = $(this).data('id');
        window.location.href = '/editutilities/' + truckId+'?customKey=utilities';
    });
    $('#truckTable tbody').on('click', '.updatestock-zone', function () {
        var truckId = $(this).data('id');
        window.location.href = '/updatetruckstock/' + truckId+'?customKey=utilities';
    });
    // Handle History button click
    $('#truckTable tbody').on('click', '.history-zone', function () {
        var truckId = $(this).data('id');
        window.location.href = '/truckhistory/' + truckId+'?customKey=utilities';
    });
  });
</script>
<script>
  $(document).ready(function () {
    $(document).on("click", ".viewsaleszone-zone", function () {
      let salesZoneId = $(this).data("id"); // Get the ID from button

      // Fetch sales data using AJAX (assuming an API endpoint `/api/saleszone/:id`)
      // $.ajax({
      //   url: `/api/saleszone/${salesZoneId}`, // Modify this based on your API
      //   type: "GET",
      //   success: function (response) {
      //     let salesData = response.salesData; // Assuming API returns { salesData: [...] }

      //     // Clear the existing rows in the table
      //     $("#salesZoneTableBody").empty();

      //     // Populate the modal table with new data
      //     salesData.forEach(sale => {
      //       let available = sale.totalLoad - (sale.quantityDelivered + sale.quantityReturned + sale.damagedQuantity);

      //       $("#salesZoneTableBody").append(`
      //         <tr>
      //           <td>${sale.item}</td>
      //           <td>${sale.totalLoad}</td>
      //           <td>${sale.quantityDelivered}</td>
      //           <td>${sale.quantityReturned}</td>
      //           <td>${sale.damagedQuantity}</td>
      //           <td>${available}</td>
      //         </tr>
      //       `);
      //     });

      //     // Show the modal
      //     $("#salesZoneModal").modal("show");
      //   },
      //   error: function () {
      //     alert("Failed to fetch sales data.");
      //   }
      // });
      $("#salesZoneModal").modal("show");

    });
  });
</script>

<%- include('../includes/footer.ejs') -%>

<%- include('../includes/end.ejs') -%>