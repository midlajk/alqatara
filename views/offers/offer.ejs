
<%- include('../includes/head.ejs') -%>
<%- include('../includes/navigation.ejs') -%>

<%- include('../includes/header.ejs') -%>
<%- include('../components/searchbartr.ejs') -%>
<a href="/newoffer" class="btn btn-danger ml-3" type="button" aria-label="Add New">New Wallet Offer</a>

</div>
</div>
</div>
</div>
</div>
<div class="container-fluid mt--6">
    <div class="row">
      <div class="col-12">
        <ul class="nav nav-tabs nav-tabs-custom" role="tablist">
          <li class="nav-item">
            <a class="nav-link active text-white" id="salesman-tab"  href="/offers">
              <i class="fa-solid fa-users-gear mr-2"></i>Offers
            </a>
          </li>
          <li class="nav-item">
            <a class="text-white nav-link" id="salesman-tab"  href="/salesmancommission">
              <i class="ni ni-circle-08 mr-2"></i>Commission
            </a>
          </li>
     
        </ul>
      </div>  


      <div class="col">
        <div class="card">

          <style>
            .tab-button {
              padding: 10px 15px;
              border: 1px solid #ccc;
              cursor: pointer;
              background: #e7e7e7;
              font-weight: bold;
              margin-right: 5px;
              transition: 0.3s;
            }
          
            .tab-button.active {
              background: #4d8da9;
              color: #ffffff;
            }
          
            .report-table {
              display: none;
            }
          
            .report-table.active {
              display: block;
            }
          </style>
          
          <div>
            <!-- <a class="tab-button active" href="/offers" data-table="salesmanTable">Wallet Offers</a>
            <a class="tab-button" href="/salesmancommission" data-table="customerTable">Salesman Commission</a>
           -->

          </div>
            <!-- Card header -->
            <div class="card-header border-0 mb-2">
              <h3 class="mb-0 text-white">Wallet Status Check</h3>
            </div>
            <!-- Light table -->
            <div class="table-responsive">
              <table class="table align-items-center table-flush" id="offertable">
                <thead class="thead-light">
                  <tr>
                    <th scope="col" class="sort" data-sort="name">OfferID</th>
                    <th scope="col" class="sort" data-sort="name">Routes</th>

                    <th scope="col" class="sort">Offer Items</th>
                    <th scope="col" class="sort">Amount</th>
                    <th scope="col" class="sort">Coupons</th>
                    <th scope="col" class="sort">Free Coupons</th>
                    

                    <th scope="col" class="sort" data-sort="completion">Created at</th>
                    <th scope="col" class="sort"></th>

                  </tr>
                </thead>
                <tbody class="list">
                  <tr>
                    
                  </tr>
                </tbody>
              </table>
            </div>
            <!-- Card footer -->
 
          </div>
      </div>
    </div>
    <!-- Footer -->
</div>
</div>
</div>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.13.4/js/dataTables.bootstrap4.min.js"></script>

<script>
$(document).ready(function() {
   const datatable = $('#offertable').DataTable({
        processing: true,
        serverSide: true,
        ajax: {
            url: '/offerlist', // Replace with your API endpoint
            type: 'GET'
        },
        columns: [
            { 
                data: 'code',
                render: function(data, type, row) {
                    return data; // Displaying MongoDB _id as OfferID
                }
            },
            { 
                data: 'routes',
                render: function(data, type, row) {
                    if (Array.isArray(data)) {
                        return data.join(', '); // Join array items with comma
                    }
                    return data || 'All';
                }
            },
            { 
                data: 'items',
                render: function(data, type, row) {
                    if (Array.isArray(data)) {
                        return data.join(', '); // Join array items with comma
                    }
                    return data || 'N/A';
                }
            },
            { 
                data: 'amount',
                render: function(data, type, row) {
                    return data ? '$' + data.toFixed(2) : '$0.00';
                }
            },
            { 
                data: 'paidcoupon',
                render: function(data, type, row) {
                    return data || '0';
                }
            },
            { 
                data: 'freecopon',
                render: function(data, type, row) {
                    return data || '0';
                }
            },
            { 
                data: 'creationdate',
                render: function(data, type, row) {
                    if (type === 'display' || type === 'filter') {
                        return new Date(data).toLocaleDateString();
                    }
                    return data;
                }
            },  { 
          data: null, 
          orderable: false, 
          searchable: false, 
          render: function(data, type, row) {
            return `<button class="btn delete btn-action btn-manage bg-gradient-red" id="deletebtn" data-id="${row._id}">
              <i class="fas fa-eye mr-1"></i> Delete
            </button>`;
          }
          
        },
        ],
        order: [[5, 'desc']], // Default sort by creationdate descending
        language: {
            search: "_INPUT_",
            searchPlaceholder: "Search coupons...",
            lengthMenu: "Show _MENU_ coupons per page",
            zeroRecords: "No coupons found",
            info: "Showing _START_ to _END_ of _TOTAL_ coupons",
            infoEmpty: "No coupons available",
            infoFiltered: "(filtered from _MAX_ total coupons)",
                paginate: {
            next: '<i class="fas fa-chevron-right"></i>',
            previous: '<i class="fas fa-chevron-left"></i>'
          },
        },
        dom: '<"top"lf>rt<"bottom"ip><"clear">',
        initComplete: function() {
            // Add any initialization complete logic here
        }
    });

    // Attach click event handler for the Delete button
    $(document).on('click', '.delete', function () {
      var id = $(this).data('id');
      
      if (confirm("Are you sure you want to delete this Offer?")) {
        $.ajax({
          url: '/delete-offer',  // Backend endpoint to handle deletion
          method: 'POST',
          data: { id: id },
          success: function (response) {
            if (response.success) {
              alert("Route deleted successfully!");
              // Reload the DataTable to reflect the deletion without resetting pagination
              datatable.ajax.reload(null, false);
            } else {
              alert("Error: " + response.message);
            }
          },
          error: function (error) {
            console.error("Error deleting route:", error);
            alert("An error occurred while deleting the Offer.");
          }
        });
      }
    });


});
</script>

    <%- include('../includes/footer.ejs') -%>

    <%- include('../includes/end.ejs') -%>