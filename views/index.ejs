
<%- include('./includes/head.ejs') -%>
<%- include('./includes/navigation.ejs') -%>

<%- include('./includes/header.ejs') -%>



<%- include('./components/figurecards.ejs') -%>

</div>
</div>
</div>
<div class="container-fluid mt--6">
<div class="row mb-2">
  <div class="col-12">

  <div class="filter-container">
    <div class="row">

  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <!-- <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"> -->
  <style>
      .chart-container {
          width: 450px;
          margin: auto;
          padding: 20px;
       
      }
  </style>
  <div class="col-xl-4">
      <div class="filter-container">
        <div class="chart-container">
            <canvas id="monitorChart"></canvas>
        </div>
    </div>
    
 </div>
 <script>
  var ctx = document.getElementById('monitorChart').getContext('2d');

  var monitorChart = new Chart(ctx, {
      type: 'pie',
      data: {
          labels: ['CPU Usage', 'Memory', 'Disk Space', 'Network', 'Temperature'],
          datasets: [{
              data: [20, 30, 15, 25, 10], // Values for each element
              backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4CAF50', '#8E44AD'],
              hoverBackgroundColor: ['#FF4765', '#2A92D9', '#E7B53F', '#3E9C40', '#732D91'],
              borderWidth: 2,
              borderColor: '#fff',
              hoverOffset: 12 // Smooth hover effect
          }]
      },
      options: {
          responsive: true,
          plugins: {
              legend: {
                  position: 'bottom',
                  labels: {
                      font: {
                          size: 14
                      },
                      color: '#333'
                  }
              }
          }
      }
  });
</script>
 <div class="col-xl-4">
  <div class="filter-container">
    <div class="chart-container">
        <canvas id="monitorChartb"></canvas>
    </div>
</div>

</div>
<div class="col-xl-4">
  <style>
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            padding: 12px;
            text-align: center;
            border: 1px solid #ddd;
        }
        th {
            background: #1f4e75;
            color: white;
        }
        td {
            background: #f8f9fa;
        }
        .editable {
            cursor: pointer;
            transition: background 0.3s;
        }
        .editable:hover {
            background: #e3f2fd;
        }
  </style>
  <div class="filter-container">
    <h4 class="mb-3">Performance Summary</h4>
    <table id="data-table">
        <thead>
            <tr>
                <th>Description</th>
                <th class="editable" data-column="1">Jan</th>
                <th class="editable" data-column="2">Feb</th>
                <th class="editable" data-column="3">Mar</th>
            </tr>
        </thead>
        <tbody>
            <tr><td>Revenue</td><td class="editable" data-row="1">XXXXX</td><td class="editable" data-row="2">XXXXX</td><td class="editable" data-row="3">XXXXX</td></tr>
            <tr><td>Bottles Sold</td><td class="editable" data-row="4">XXXXX</td><td class="editable" data-row="5">XXXXX</td><td class="editable" data-row="6">XXXXX</td></tr>
            <tr><td>Customers Created</td><td class="editable" data-row="7">XXXXX</td><td class="editable" data-row="8">XXXXX</td><td class="editable" data-row="9">XXXXX</td></tr>
            <tr><td>Customers Deleted</td><td class="editable" data-row="10">XXXXX</td><td class="editable" data-row="11">XXXXX</td><td class="editable" data-row="12">XXXXX</td></tr>
            <tr><td>Bottles Out</td><td class="editable" data-row="13">XXXXX</td><td class="editable" data-row="14">XXXXX</td><td class="editable" data-row="15">XXXXX</td></tr>
            <tr><td>Dispenser Out</td><td class="editable" data-row="16">XXXXX</td><td class="editable" data-row="17">XXXXX</td><td class="editable" data-row="18">XXXXX</td></tr>
            <tr><td>Add Customers</td><td class="editable" data-row="19">XXXXX</td><td class="editable" data-row="20">XXXXX</td><td class="editable" data-row="21">XXXXX</td></tr>
        </tbody>
    </table>
</div>

</div>
    <script>
      var ctx = document.getElementById('monitorChartb').getContext('2d');
  
      var monitorChart = new Chart(ctx, {
          type: 'pie',
          data: {
              labels: ['CPU Usage', 'Memory', 'Disk Space', 'Network', 'Temperature'],
              datasets: [{
                  data: [20, 30, 15, 25, 10], // Values for each element
                  backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4CAF50', '#8E44AD'],
                  hoverBackgroundColor: ['#FF4765', '#2A92D9', '#E7B53F', '#3E9C40', '#732D91'],
                  borderWidth: 2,
                  borderColor: '#fff',
                  hoverOffset: 12 // Smooth hover effect
              }]
          },
          options: {
              responsive: true,
              plugins: {
                  legend: {
                      position: 'bottom',
                      labels: {
                          font: {
                              size: 14
                          },
                          color: '#333'
                      }
                  }
              }
          }
      });
  </script>
</div>
</div>
</div>
</div>

  <div class="row">
    <!-- ...1 -->

   
<!-- </div>
      </div> -->


    <div class="col-xl-7">
      <div class="filter-container">

        <div class="table-responsive">
          <table id="reporttable" class="table align-items-center table-flush">
            <thead class="thead-light">
              <tr>
                <th scope="col" class="sort" data-sort="name">ID</th>
                <th scope="col" class="sort" data-sort="budget">Name</th>
                <th scope="col" class="sort" data-sort="status"> Security Deposit</th>
                <th scope="col" class="sort" data-sort="completion">Wallet Recharge</th>
                <th scope="col" class="sort" data-sort="completion">Delivery Collection</th>
                <th scope="col">Total Collection</th>
              </tr>
            </thead>
            <tbody class="list">
              <tr>

              </tr>
            </tbody>
          </table>
    </div>


        </div>
        </div>

          <!-- ...1 -->

      <div class="col-xl-5">
        <div class="filter-container">

          <div class="card bg-default mt-1">
              <div class="card-header bg-transparent">
                  <div class="row align-items-center">
                      <div class="col">
                          <h6 class="text-light text-uppercase ls-1 mb-1">Overview</h6>
                          <h5 class="h3 text-white mb-0">Sales value</h5>
                      </div>
                      <!-- <div class="col">
                          <ul class="nav nav-pills justify-content-end">
                              <li class="nav-item mr-2 mr-md-0" data-toggle="chart"
                                  data-target="#chart-sales-dark"
                                  data-update='{"data":{"datasets":[{"data":[0, 20, 10, 30, 15, 40, 20, 60, 60]}]}}'
                                  data-prefix="$" data-suffix="k">
                                  <a href="#" class="nav-link py-2 px-3 active" data-toggle="tab">
                                      <span class="d-none d-md-block">Month</span>
                                      <span class="d-md-none">M</span>
                                  </a>
                              </li>
                              <li class="nav-item" data-toggle="chart" data-target="#chart-sales-dark"
                                  data-update='{"data":{"datasets":[{"data":[0, 20, 5, 25, 10, 30, 15, 40, 40]}]}}'
                                  data-prefix="$" data-suffix="k">
                                  <a href="#" class="nav-link py-2 px-3" data-toggle="tab">
                                      <span class="d-none d-md-block">Week</span>
                                      <span class="d-md-none">W</span>
                                  </a>
                              </li>
                          </ul>
                      </div> -->
                  </div>
              </div>
              <div class="card-body">
                  <!-- Chart -->
                  <div class="chart">
                      <!-- Chart wrapper -->
                      <canvas id="chart-sales-dark" class="chart-canvas"></canvas>
                  </div>
              </div>
          </div>
          </div>
      </div>

          <!-- ...2 -->


                <!-- ...2 -->

  </div>
  <script src="/assets/vendor/jquery.scrollbar/jquery.scrollbar.min.js"></script>
<script src="/assets/vendor/jquery-scroll-lock/dist/jquery-scrollLock.min.js"></script>
   <!-- Footer -->
   <script src="/assets/vendor/js-cookie/js.cookie.js"></script>
<!-- Optional JS -->
<script src="assets/vendor/chart.js/dist/Chart.min.js"></script>
<script src="assets/vendor/chart.js/dist/Chart.extension.js"></script>  

<script src="assets/js/argon.js?v=1.2.1"></script>
<%- include('./includes/footer.ejs') -%>
<script>
var SalesChart = (function() {
       let truck = truckids||'All';
       let fromDate = $("#fromDate").val();
       let toDate = $("#toDate").val();
       if (!fromDate || !toDate) {
        let { startOfMonth, endOfMonth } = getDefaultMonthDates();
        fromDate = startOfMonth;
        toDate = endOfMonth;
    }
      // Variables
  var $chart = $('#chart-sales-dark');
  fetchSalesData(fromDate, toDate, truck);     
  // Method to fetch sales data and update the chart
  function fetchSalesData(fromDate, toDate, truckId) {
    $.ajax({
      url: '/sales-data',
      type: 'GET',
      data: { fromDate: fromDate, toDate: toDate, truckId: truckId },
      headers: { "x-custom-key": "dashboard" }, // Pass the custom key here

      dataType: 'json',
      success: function(response) {
        updateChart(response.labels, response.data);
      },
      error: function(xhr, status, error) {
        console.error("Error fetching sales data:", error);
      }
    });
  }

  // Method to update the chart with new data
  function updateChart(labels, data) {
    var salesChart = $chart.data('chart');

    // Update the chart's labels and data dynamically
    salesChart.data.labels = labels;
    salesChart.data.datasets[0].data = data;

    // Re-render the chart
    salesChart.update();
  }

  // Method to initialize the chart
  function init($this) {
    var salesChart = new Chart($this, {
      type: 'line',
      options: {
        scales: {
          yAxes: [{
            gridLines: {
              color: Charts.colors.gray[700],
              zeroLineColor: Charts.colors.gray[700]
            },
            ticks: {
              beginAtZero: true,
            }
          }]
        }
      },
      data: {
        labels: [], // Will be dynamically updated
        datasets: [{
          label: 'Sales Performance',
          data: [] // Will be dynamically updated
        }]
      }
    });

    // Save chart instance to the DOM element
    $this.data('chart', salesChart);
  }

  // Events
  if ($chart.length) {
    init($chart);

    // Initialize filter and update chart on filter change
    $("#applyFilterBtn").click(function() {
      var fromDate = $("#fromDate").val();
      var toDate = $("#toDate").val();
   

      fetchSalesData(fromDate, toDate, truckids);
    
    });
  }

})();

</script>
<script>
async function fetchOrderData(startDate, endDate, truckId = '', area = '') {
    try {
        const response = await fetch(`/getOrdersCount?startDate=${startDate}&endDate=${endDate}&truckId=${truckId}&area=${area}&customKey=dashboard`);
        const data = await response.json();

        // Process data for Chart.js
        const labels = data.map(entry => entry._id);
        const values = data.map(entry => entry.totalOrders);

        updateChart(labels, values);
    } catch (error) {
        console.error('Error fetching order data:', error);
    }
}

function updateChart(labels, data) {
    var ctx = document.getElementById('chart-bar').getContext('2d');

    if (window.ordersChart) {
        window.ordersChart.destroy(); // Destroy old chart before creating a new one
    }

    window.ordersChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [{
                label: 'Orders',
                data: data,
                backgroundColor: 'rgba(54, 162, 235, 0.6)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            scales: {
                y: { beginAtZero: true }
            }
        }
    });
}

// Example Usage:
fetchOrderData('2024-01-01', '2025-02-01'); // Pass date range dynamically


// var BarsChart = (function() {

// //
// // Variables
// //

// var $chart = $('#chart-bars');


// //
// // Methods
// //

// // Init chart
// function initChart($chart) {

//   // Create chart
//   var ordersChart = new Chart($chart, {
//     type: 'bar',
//     data: {
//       labels: ['Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
//       datasets: [{
//         label: 'Sales',
//         data: [25, 20, 30, 22, 17, 29]
//       }]
//     }
//   });

//   // Save to jQuery object
//   $chart.data('chart', ordersChart);
// }


// // Init chart
// if ($chart.length) {
//   initChart($chart);
// }

// })();
</script>
<script src="/assets/vendor/chart.js/dist/Chart.min.js"></script>
<script src="/assets/vendor/chart.js/dist/Chart.extension.js"></script>  
<script>
  $(document).ready(function () {
  // Initialize DataTable
  const table = $('#reporttable').DataTable({
    ajax: {
      url: '/getsalesmanreport', // Endpoint to fetch data
      dataSrc: ''
    },
    columns: [
      { data: 'id' },
      { 
                data: 'name', 
                title: 'Salesman Name',
                render: function (data, type, row) {
                    return `<a href="individualsalesmanreport/${row.id}" class="salesman-link" data-id="${row.id}">${data}</a>`;
                }
            },       { data: 'totalBottleDeposits' },
      { data: 'totalWalletCollection' },
      { data: 'totalCreditCollection' },

      { data: 'totalCollection' }
    ]
  });

  // Handle form submission
  $('#dateForm').on('submit', function (e) {
    e.preventDefault();

    // Get selected dates
    const fromDate = $('#fromDate').val();
    const toDate = $('#toDate').val();
    const download = $('#download').val();

    // Reload DataTable with new parameters
    if(download =='Yes'){
      
              window.location.href = `/getsalesmanreportxl?fromDate=${fromDate}&toDate=${toDate}&download=${download}`;

    }else{
                table.ajax.url(`/getsalesmanreport?fromDate=${fromDate}&toDate=${toDate}&download=${download}`).load();

    }

    // Close the modal
    $('#dateModal').modal('hide');
  });
});

</script>

<%- include('./includes/end.ejs') -%>