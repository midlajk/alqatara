<%- include('../includes/head.ejs') -%>
<%- include('../includes/navigation.ejs') -%>

<%- include('../includes/header.ejs') -%>
<%- include('../components/searchbartr.ejs') -%>

</div>
</div>
</div>
</div>
</div>
<div class="container-fluid mt--6">
  <div class="row">
      <div class="col">
          <div class="card" id="cardb">
              <div class="card-header">
                  <h3 class="mb-0">Manage Truck Stock</h3>
              </div>
              
              <!-- Stock Entry Form -->
              <div class="card-body">
                  <form id="stockForm">
                      <input type="hidden" name="truckId" value="<%=truck.id%>">
                      <input type="hidden" name="city" value="<%=truck.city%>">

                      <div class="form-group row">
                          <label class="col-md-2 col-form-label form-control-label">Truck ID</label>
                          <div class="col-md-10">
                              <input class="form-control" type="text" value="<%=truck.id%>" disabled>
                          </div>
                      </div>
                      
                      <div class="form-group row">
                          <label class="col-md-2 col-form-label form-control-label">Product</label>
                          <div class="col-md-10">
                            <select class="form-control itemid-js" name="itemId" id="itemId" required>
                            
                            </select>
                          </div>
                      </div>
                      
                      <div class="form-group row">
                          <label class="col-md-2 col-form-label form-control-label">Action</label>
                          <div class="col-md-10">
                              <select class="form-control" name="actionType" required>
                                  <option value="outward">Add to Truck</option>
                                  <option value="inward">Return from Truck</option>
                              </select>
                          </div>
                      </div>
                      
                      <div class="form-group row">
                          <label class="col-md-2 col-form-label form-control-label">Condition</label>
                          <div class="col-md-10">
                              <select class="form-control" name="itemStatus" required>
                                  <option value="New">New</option>
                                  <option value="Old">Used</option>
                                  <option value="Damaged">Damaged</option>
                              </select>
                          </div>
                      </div>
                      
                      <div class="form-group row">
                          <label class="col-md-2 col-form-label form-control-label">Quantity</label>
                          <div class="col-md-10">
                              <input class="form-control" type="number" name="quantity" placeholder="Enter quantity" min="1" required>
                          </div>
                      </div>
                      
                      <div class="form-group row">
                          <div class="col-md-10 offset-md-2">
                              <button type="submit" class="btn btn-success">Add Record</button>
                          </div>
                      </div>
                  </form>
              </div>

              <!-- Stock Summary Table -->
              <div class="card-body">
                  <table class="table table-flush">
                      <thead>
                          <tr>
                              <th>Product</th>
                              <th>Added</th>
                              <th>Returned</th>
                              <th>Used</th>
                              <th>Damaged</th>
                              <th>Balance</th>
                          </tr>
                      </thead>
                      <tbody id="stockTableBody">
                          <!-- Will be populated from truck.productDetails -->
                      </tbody>
                  </table>
                  
                  <div class="mt-2">
                      <button id="finalizeStock" class="btn btn-danger">Close Stock</button>
                  </div>
              </div>
          </div>
      </div>
  </div>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.8/js/select2.min.js" defer></script>
<script>
$(document).ready(function() {
  $('.itemid-js').select2({
          dropdownParent: $("#cardb"),
          ajax: {
              url: '/productids',
              dataType: 'json',
              delay: 250,
              processResults: function (data) {
                  return {
                      results: data.results
                  };
              },
              cache: true
          }
      })

      let itemname = ''
      $('.itemid-js').on("select2:select", function (e) {
        let selectedData = e.params.data;
        let itemId = selectedData.id;    // Get item ID
        let itemName = selectedData.text; // Get item Name

      

        // Store the item name in a hidden input (optional)
        itemname = itemName
    });
  // Load initial truck stock data
  loadTruckStock();
  
  // Form submission
  $("#stockForm").submit(async function(e) {
      e.preventDefault();
       const user = '<%=user.name%>'
      const formData = {
          truckId: $("input[name='truckId']").val(),
          productId: $("#itemId").val(),
          productName:itemname,
          actionType: $("select[name='actionType']").val(),
          itemStatus: $("select[name='itemStatus']").val(),
          quantity: parseInt($("input[name='quantity']").val()),
          city: $("input[name='city']").val(),
          doneby: user// Replace with actual user
      };
      
      try {
          const response = await $.ajax({
              url: '/updatetruckstock',
              method: 'POST',
              contentType: 'application/json',
              data: JSON.stringify(formData)
          });
          
          if (response.success) {
              loadTruckStock();
              this.reset();
          }
      } catch (error) {
          console.error("Error:", error);
          alert("Error updating stock");
      }
  });
  
  // Finalize stock
  $("#finalizeStock").click(async function() {
      const truckId = $("input[name='truckId']").val();
      
      if (!confirm("Are you sure you want to close this stock?")) return;
      
      try {
          const response = await $.ajax({
              url: '/closeTruckStock',
              method: 'POST',
              contentType: 'application/json',
              data: JSON.stringify({ truckId })
          });
          
          if (response.success) {
              alert("Stock closed successfully!");
              loadTruckStock();
          }
      } catch (error) {
          console.error("Error:", error);
          alert("Error closing stock");
      }
  });
  
// Load truck stock data
async function loadTruckStock() {
    const truckId = $("input[name='truckId']").val();
    
    try {
        const response = await $.ajax({
            url: `/gettruckstocks/${truckId}`,
            method: 'GET'
        });
        
        if (response.success && response.data && response.data.productDetails) {
            console.log("Received product details:", response.data.productDetails);
            updateStockTable(response.data.productDetails);
        } else {
            console.warn("No valid stock data available for this truck:", response);
            updateStockTable([]); // Pass empty array to clear the table
        }
    } catch (error) {
        console.error("Error loading truck stock:", error);
        updateStockTable([]); // Clear table on error
    }
}

// Update table with productDetails
function updateStockTable(productDetails = []) {
    const summary = {};
    
    // Ensure productDetails is always an array
    const detailsArray = Array.isArray(productDetails) ? productDetails : [];
    
    detailsArray.forEach(item => {
        // Ensure item has required properties
        if (!item || !item.productname) return;
        
        if (!summary[item.productname]) {
            summary[item.productname] = {
                added: 0,
                returned: 0,
                used: 0,
                damaged: 0
            };
        }
        
        if (item.inwardoutward === 'inward') {
            summary[item.productname].added += item.quantity || 0;
        } else {
            summary[item.productname].returned += item.quantity || 0;
            if (item.itemtype === 'Old') summary[item.productname].used += item.quantity || 0;
            if (item.itemtype === 'Damaged') summary[item.productname].damaged += item.quantity || 0;
        }
    });
    
    $("#stockTableBody").empty();
    
    Object.entries(summary).forEach(([product, data]) => {
        $("#stockTableBody").append(`
            <tr>
                <td>${product}</td>
                <td>${data.added}</td>
                <td>${data.returned}</td>
                <td>${data.used}</td>
                <td>${data.damaged}</td>
                <td>${data.added - data.returned}</td>
            </tr>
        `);
    });
}
  // function formatProductName(name) {
  //     const names = {
  //         '5galBottles': '5 Gallon Bottles',
  //         '200mlBottles': '200ml Bottles'
  //     };
  //     return names[name] || name;
  // }
});
</script> 
               
<%- include('../includes/footer.ejs') -%>
<%- include('../includes/end.ejs') -%>
