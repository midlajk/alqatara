<%- include('../includes/head.ejs') -%>
<%- include('../includes/navigation.ejs') -%>
<%- include('../includes/header.ejs') -%>

<style>
  /* Modern Dashboard Styles */
  :root {
    --primary-color: #4d8da9;
    --secondary-color: #61A3C0;
    --success-color: #1cc88a;
    --info-color: #36b9cc;
    --warning-color: #f6c23e;
    --danger-color: #e74a3b;
    --light-color: #f8f9fc;
    --dark-color: #5a5c69;
  }

  /* Card Styles */
  .card {
    border: none;
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
    transition: all 0.3s ease;
    overflow: hidden;
  }

  .card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  }

  .card-header {
    background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
    color: white;
    border-bottom: none;
    padding: 1.25rem 1.5rem;
  }

  /* Tab Navigation */
  .tab-navigation {
    display: flex;
    background: #f8f9fa;
    border-radius: 10px;
    padding: 0.5rem;
    margin-bottom: 1rem;
  }

  .tab-button {
    padding: 10px 20px;
    border-radius: 8px;
    font-weight: 500;
    color: #495057;
    transition: all 0.3s ease;
    text-decoration: none;
    margin-right: 5px;
    background: transparent;
    border: none;
  }

  .tab-button:hover {
    background: rgba(77, 141, 169, 0.1);
    color: var(--primary-color);
  }

  .tab-button.active {
    background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
    color: white;
    box-shadow: 0 4px 12px rgba(77, 141, 169, 0.2);
  }

  /* Action Buttons */
  .btn-add-new {
    background: linear-gradient(135deg, var(--danger-color) 0%, #f56036 100%);
    border: none;
    border-radius: 8px;
    font-weight: 500;
    padding: 10px 20px;
    box-shadow: 0 4px 8px rgba(245, 54, 92, 0.2);
    transition: all 0.3s ease;
    display: inline-flex;
    align-items: center;
    color: white;
  }

  .btn-add-new:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 12px rgba(245, 54, 92, 0.3);
    color: white;
  }

  .btn-summary {
    background: linear-gradient(135deg, var(--success-color) 0%, #13855c 100%);
    border: none;
    border-radius: 8px;
    font-weight: 500;
    padding: 10px 20px;
    box-shadow: 0 4px 8px rgba(28, 200, 138, 0.2);
    transition: all 0.3s ease;
    display: inline-flex;
    align-items: center;
    color: white;
  }

  .btn-summary:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 12px rgba(28, 200, 138, 0.3);
    color: white;
  }

  /* Table Styles */
  .table {
    width: 100%;
    margin-bottom: 1rem;
    color: #212529;
  }

  .table thead th {
    border-bottom: 2px solid #e3e6f0;
    font-weight: 600;
    text-transform: uppercase;
    font-size: 0.75rem;
    letter-spacing: 0.5px;
    color: #6c757d;
    padding: 1rem;
  }

  .table tbody td {
    padding: 1rem;
    vertical-align: middle;
    border-top: 1px solid #e3e6f0;
  }

  .table-striped tbody tr:nth-of-type(odd) {
    background-color: rgba(0, 0, 0, 0.02);
  }

  .table-responsive {
    border-radius: 12px;
    overflow-x: scroll;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
  }

  /* Action Buttons in Table */
  .action-buttons {
    display: flex;
    gap: 8px;
  }

  .btn-action {
    border-radius: 6px;
    font-weight: 500;
    font-size: 0.85rem;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
    border: none;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    padding: 8px 12px;
    min-width: 100px;
  }

  .btn-view {
    background: linear-gradient(135deg, #4e73df 0%, #224abe 100%);
    color: white;
  }

  .btn-manage {
    background: linear-gradient(135deg, #1cc88a 0%, #13855c 100%);
    color: white;
  }

  .btn-icon {
    width: 34px;
    height: 34px;
    border-radius: 6px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
    background-color: #f8f9fc;
    color: #5a5c69;
    border: 1px solid #e3e6f0;
  }

  .btn-edit:hover {
    background-color: #f6c23e;
    color: white;
    transform: translateY(-2px);
  }

  .btn-history:hover {
    background-color: #36b9cc;
    color: white;
    transform: translateY(-2px);
  }

  /* Modal Styles */
  .modal-content {
    border-radius: 12px;
    border: none;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
  }

  .modal-header {
    background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
    color: white;
    border-bottom: none;
    border-radius: 12px 12px 0 0;
  }

  .modal-title {
    font-weight: 600;
  }

  /* Summary Modal Specific */
  .modal-dialog-slideout {
    position: fixed;
    right: 0;
    top: 0;
    bottom: 0;
    margin: 0;
    width: 500px;
    max-width: 100vw;
    transform: translateX(100%);
    transition: transform 0.3s ease-out;
  }
  
  .modal-dialog-slideout.show {
    transform: translateX(0);
  }
  
  .modal-dialog-slideout .modal-content {
    height: 100vh;
    overflow-y: auto;
    border-radius: 0;
    border: none;
  }
  
  .product-card {
    border: 1px solid #e3e6f0;
    border-radius: 8px;
    padding: 15px;
    margin-bottom: 15px;
    transition: all 0.3s;
    background: white;
  }
  
  .product-card:hover {
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    transform: translateY(-3px);
  }
  
  .product-name {
    font-weight: 600;
    color: #4e73df;
    margin-bottom: 10px;
    font-size: 16px;
  }
  
  .product-stats {
    display: flex;
    justify-content: space-between;
  }
  
  .stat-item {
    text-align: center;
    flex: 1;
  }
  
  .stat-value {
    font-size: 18px;
    font-weight: 700;
    margin-bottom: 5px;
  }
  
  .stat-label {
    font-size: 12px;
    color: #858796;
    text-transform: uppercase;
  }
  
  .text-delivered {
    color: var(--success-color);
  }
  
  .text-loaded {
    color: var(--info-color);
  }
  
  .text-returned {
    color: var(--danger-color);
  }

  /* Responsive Adjustments */
  @media (max-width: 768px) {
    .action-buttons {
      flex-direction: column;
    }
    
    .btn-action {
      width: 100%;
    }
    
    .tab-navigation {
      flex-direction: column;
    }
    
    .tab-button {
      width: 100%;
      margin-bottom: 5px;
    }
  }
</style>
</div>
</div>
</div>
</div>

<div class="container-fluid mt-4">
  <div class="d-flex justify-content-between align-items-center mb-4">
    <div class="tab-navigation">
      <a class="tab-button" href="/inventorymanagement">Store Inventory</a>
      <a class="tab-button active" href="/utilities">Car Stock Transaction</a>
    </div>
    <div>
      <a href="/utilities/addtruck?customKey=utilities" class="btn btn-add-new mr-2">
        <i class="fas fa-plus mr-2"></i> Add New Truck
      </a>
      <button class="btn btn-summary" id="showSumBtn">
        <i class="fas fa-chart-bar mr-2"></i> Product Summary
      </button>
    </div>
  </div>

  <div class="row">
    <div class="col">
      <div class="card">
        <div class="card-header mb-2">
          <h3 class="mb-0 text-white"><i class="fas fa-truck mr-2"></i> Truck Delivery and Details</h3>
        </div>
        <div class="table-responsive">
          <table id="truckTable" class="table align-items-center table-flush table-striped">
            <thead class="thead-light">
              <tr>
                <th>Truck ID</th>
                <th>In-Charge</th>
                <th>Assistants</th>
                <th>Route</th>
                <th>Last Updated</th>
                <th>Stock</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody class="list"></tbody>
          </table>
        </div>
      </div>
    </div>
  </div>


<!-- Truck Stock Details Modal -->
<div class="modal fade" id="salesZoneModal" tabindex="-1" aria-labelledby="salesZoneModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-xl">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title text-white"><i class="fas fa-boxes mr-2"></i> Truck Stock Details</h5>
        <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div class="row mb-4">
          <div class="col-md-6">
            <div class="d-flex align-items-center mb-2">
              <i class="fas fa-truck mr-2"></i>
              <h5 class="mb-0">Truck ID: <span id="truckIdDisplay" class="font-weight-bold"></span></h5>
            </div>
            <div class="d-flex align-items-center">
              <i class="fas fa-user mr-2"></i>
              <h5 class="mb-0">In-Charge: <span id="salesmanIdDisplay" class="font-weight-bold"></span></h5>
            </div>
          </div>
          <div class="col-md-6 text-right">
            <div class="d-flex align-items-center justify-content-end">
              <i class="fas fa-clock mr-2"></i>
              <h5 class="mb-0">Last Updated: <span id="updatedAtDisplay" class="font-weight-bold"></span></h5>
            </div>
          </div>
        </div>
        
        <div class="table-responsive">
          <table class="table table-bordered">
            <thead class="thead-light">
              <tr>
                <th>Item</th>
                <th>Added</th>
                <th>Delivered</th>
                <th>Returned</th>
                <th>Used</th>
                <th>Damaged</th>
                <th>Balance</th>
              </tr>
            </thead>
            <tbody id="stockDetailsBody"></tbody>
          </table>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <a href="#" id="printbutton" class="btn btn-success">Print</a>

      </div>
    </div>
  </div>
</div>

<!-- Product Summary Modal -->
<div class="modal fade" id="productSummaryModal" tabindex="-1" role="dialog" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-slideout" role="document">
    <div class="modal-content">
      <div class="modal-header bg-primary text-white">
        <h5 class="modal-title text-white">
          <i class="fas fa-chart-pie mr-2"></i>Total Product Delivery Summary
        </h5>
        <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div class="form-group">
          <div class="input-group">
            <input type="text" class="form-control" id="productSearch" placeholder="Search products...">
            <div class="input-group-append">
              <span class="input-group-text"><i class="fas fa-search"></i></span>
            </div>
          </div>
        </div>
        
        <div class="row" id="productCardsContainer">
          <!-- Product cards will be loaded here -->
        </div>
      </div>
    </div>
  </div>
</div>
<!-- JavaScript Libraries -->
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.13.4/js/dataTables.bootstrap4.min.js"></script>

<script>
  $(document).ready(function() {
    // Initialize DataTable
    var datatable = $('#truckTable').DataTable({
      responsive: true,
      processing: true,
      serverSide: true,
      ajax: {
        url: '/gettrucks',
        dataSrc: 'docs',
        data: function(d) {
          return d;
        },
      },
      language: {
        paginate: {
          next: '<i class="fas fa-chevron-right"></i>',
          previous: '<i class="fas fa-chevron-left"></i>'
        },
        search: "_INPUT_",
        searchPlaceholder: "Search trucks...",
        lengthMenu: "Show _MENU_ trucks",
        info: "Showing _START_ to _END_ of _TOTAL_ trucks"
      },
      columns: [
        { data: 'id', render: data => data ? `<span class="font-weight-bold">${data}</span>` : 'N/A' },
        { data: 'salesmanId', render: data => data || 'N/A' },
        { 
          data: 'assistants', 
          render: function(data) {
            if (!data) return 'N/A';
            if (Array.isArray(data)) return data.join(', ');
            return data;
          }
        },
        { data: 'routeId', render: data => data || 'N/A' },
        { 
          data: 'updatedAt',
          render: function(data) {
            return data ? new Date(data).toLocaleString() : 'N/A';
          }
        },
        {
          data: null,
          orderable: false,
          searchable: false,
          render: function(data, type, row) {
            return `
              <div class="action-buttons">
                <button class="btn btn-action btn-view" data-id="${row.id}">
                  <i class="fas fa-box-open mr-1"></i> View
                </button>
                <button class="btn btn-action btn-manage" data-id="${row._id}">
                  <i class="fas fa-clipboard-check mr-1"></i> Manage
                </button>
              </div>`;
          }
        },
        {
          data: null,
          orderable: false,
          searchable: false,
          render: function(data, type, row) {
            return `
              <div class="action-buttons">
                <button class="btn btn-icon btn-edit" data-id="${row._id}">
                  <i class="fas fa-cog"></i>
                </button>
                <button class="btn btn-icon btn-history" data-id="${row.id}">
                  <i class="fas fa-history"></i>
                </button>
              </div>`;
          }
        }
      ]
    });

    // Button click handlers
    $('#truckTable tbody').on('click', '.btn-manage', function() {
      var truckId = $(this).data('id');
      window.location.href = '/updatetruckstock/' + truckId + '?customKey=utilities';
    });

    $('#truckTable tbody').on('click', '.btn-edit', function() {
      var truckId = $(this).data('id');
      window.location.href = '/editutilities/' + truckId + '?customKey=utilities';
    });

    $('#truckTable tbody').on('click', '.btn-history', function() {
      var truckId = $(this).data('id');
      window.location.href = '/truckhistory/' + truckId + '?customKey=utilities';
    });

    $('#truckTable tbody').on('click', '.btn-view', function() {
      var truckId = $(this).data('id');
      fetchTruckStockDetails(truckId);
    });

    // Show product summary panel
    $('#showSumBtn').click(function() {
      // Show loading state
      $('#productCardsContainer').html(`
        <div class="col-12 text-center py-5">
          <i class="fas fa-spinner fa-spin fa-2x"></i>
          <p>Loading product data...</p>
        </div>
      `);
      
      // Fetch product summary data
      $.ajax({
        url: '/getalltruckProductHistorySummary',
        method: 'GET',
        success: function(response) {
          if (response.success && response.data && response.data.length > 0) {
            renderProductCards(response.data);
          } else {
            $('#productCardsContainer').html(`
              <div class="col-12 text-center py-5">
                <i class="fas fa-box-open fa-2x mb-3"></i>
                <p>No product data available</p>
              </div>
            `);
          }
        },
        error: function() {
          $('#productCardsContainer').html(`
            <div class="col-12 text-center py-5">
              <i class="fas fa-exclamation-triangle fa-2x mb-3 text-danger"></i>
              <p>Error loading product data</p>
            </div>
          `);
        }
      });
      
      $('#productSummaryModal').modal('show');
    });
    
    // Product search functionality
    $('#productSearch').on('input', function() {
      const searchTerm = $(this).val().toLowerCase();
      $('.product-card').each(function() {
        const productName = $(this).find('.product-name').text().toLowerCase();
        $(this).toggle(productName.includes(searchTerm));
      });
    });
    
    // Function to fetch truck stock details
    function fetchTruckStockDetails(truckId) {
      $.ajax({
        url: `/gettruckstocks/${truckId}`,
        method: 'GET',
        success: function(response) {
          if (response.success && response.data) {
            displayStockDetails(response.data);
            $('#salesZoneModal').modal('show');
          } else {
            alert('Failed to load truck stock details');
          }
        },
        error: function(error) {
          console.error('Error:', error);
          alert('Error loading truck stock details');
        }
      });
    }
    
    // Function to display stock details
    function displayStockDetails(truckData) {
      const url = `/printtruckdetail/${truckData.id}`;
  // Set it on the Print link:
      $('#printbutton').attr('href', url);
      $('#truckIdDisplay').text(truckData.id || 'N/A');
      $('#salesmanIdDisplay').text(truckData.salesmanId || 'N/A');
      $('#updatedAtDisplay').text(truckData.updatedAt ? 
        new Date(truckData.updatedAt).toLocaleString() : 'N/A');
      
      const summary = {};
      
      if (truckData.productDetails && truckData.productDetails.length > 0) {
        truckData.productDetails.forEach(item => {
          if (!summary[item.productname]) {
            summary[item.productname] = {
              productname: item.productname,
              added: 0,
              delivered: 0,
              returned: 0,
              used: 0,
              damaged: 0
            };
          }
          
          if (item.inwardoutward === 'outward') {
            summary[item.productname].added += item.quantity || 0;
          } else {
            summary[item.productname].returned += item.quantity || 0;
            if (item.itemtype === 'Old') summary[item.productname].used += item.quantity || 0;
            if (item.itemtype === 'Damaged') summary[item.productname].damaged += item.quantity || 0;
          }
          summary[item.productname].delivered += item.delivered || 0;
        });
      }
      
      const $tbody = $('#stockDetailsBody');
      $tbody.empty();
      
      Object.entries(summary).forEach(([product, data]) => {
        $tbody.append(`
          <tr>
            <td>${data.productname}</td>
            <td>${data.added}</td>
            <td>${data.delivered}</td>
            <td>${data.returned}</td>
            <td>${data.used}</td>
            <td>${data.damaged}</td>
            <td><strong>${data.added - data.returned}</strong></td>
          </tr>
        `);
      });
      
      if (Object.keys(summary).length === 0) {
        $tbody.append(`
          <tr>
            <td colspan="7" class="text-center py-4">No stock details available</td>
          </tr>
        `);
      }
    }
    
    // Function to render product cards
    function renderProductCards(products) {
      let html = '';
      
      products.forEach(product => {
        html += `
          <div class="col-md-12 product-card">
            <div class="product-name">
              <i class="fas fa-box mr-2"></i>${product.productName}
            </div>
            <div class="product-stats">
              <div class="stat-item">
                <div class="stat-value text-loaded">${product.totalLoaded || 0}</div>
                <div class="stat-label">Loaded</div>
              </div>
              <div class="stat-item">
                <div class="stat-value text-delivered">${product.totalDelivered || 0}</div>
                <div class="stat-label">Delivered</div>
              </div>
              <div class="stat-item">
                <div class="stat-value text-returned">${product.totalReturned || 0}</div>
                <div class="stat-label">Returned</div>
              </div>
            </div>
          </div>
        `;
      });
      
      $('#productCardsContainer').html(html);
    }
  });
</script>

<%- include('../includes/footer.ejs') -%>
<%- include('../includes/end.ejs') -%>