<%- include('../includes/head.ejs') -%>
<%- include('../includes/navigation.ejs') -%>

<style>
  :root {
    --primary-color: #4d8da9;
    --secondary-color: #61A3C0;
    --success-color: #1cc88a;
    --info-color: #36b9cc;
    --warning-color: #f6c23e;
    --danger-color: #e74a3b;
    --light-color: #f8f9fc;
    --dark-color: #5a5c69;
  }

  /* Modern Card Styles */
  .dashboard-card {
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    border: none;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  
  .dashboard-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
  }
  
  .card-header {
    border-radius: 12px 12px 0 0 !important;
    background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
    color: white;
    padding: 1.25rem 1.5rem;
  }
  
  /* Enhanced Summary Cards */
  .summary-card {
    border-radius: 12px;
    overflow: hidden;
    position: relative;
    color: white;
    transition: all 0.3s ease;
    border: none;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  }
  
  .summary-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 15px rgba(0,0,0,0.2);
  }
  
  .summary-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
  }
  
  .summary-card.total {
    background: linear-gradient(135deg, #4d8da9 0%, #61A3C0 100%);
  }
  
  .summary-card.pending {
    background: linear-gradient(135deg, #ffc107 0%, #ffab00 100%);
  }
  
  .summary-card.completed {
    background: linear-gradient(135deg, #28a745 0%, #1e7e34 100%);
  }
  
  .summary-card.cancelled {
    background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
  }
  
  .summary-card .card-body {
    position: relative;
    z-index: 1;
  }
  
  .summary-card .icon-wrapper {
    position: absolute;
    right: 20px;
    top: 50%;
    transform: translateY(-50%);
    opacity: 0.2;
    font-size: 4rem;
  }
  
  /* Status Badges */
  .status-badge {
    padding: 6px 12px;
    border-radius: 20px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }
  
  .badge-pending {
    background-color: #fff3cd;
    color: #856404;
  }
  
  .badge-completed {
    background-color: #d4edda;
    color: #155724;
  }
  
  .badge-cancelled {
    background-color: #f8d7da;
    color: #721c24;
  }
  
  .badge-in-progress {
    background-color: #cce5ff;
    color: #004085;
  }
  
  /* Action Buttons */
  .btn-action {
    border-radius: 6px;
    font-weight: 500;
    font-size: 0.85rem;
    padding: 8px 12px;
    min-width: 90px;
    transition: all 0.2s ease;
    border: none;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }
  
  .btn-view {
    background: linear-gradient(135deg, #4e73df 0%, #224abe 100%);
    color: white;
  }
  
  .btn-view:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.15);
  }
  
  /* Filter Section */
  .filter-section {
    background: white;
    border-radius: 10px;
    padding: 20px;
    margin-bottom: 20px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
  }
  
  /* Responsive Table */
  .table-responsive {
    border-radius: 10px;
    overflow: hidden;
  }
  
  /* Date Inputs */
  .date-input-group {
    position: relative;
  }
  
  .date-input-group i {
    position: absolute;
    right: 12px;
    top: 50%;
    transform: translateY(-50%);
    color: #adb5bd;
  }
  
  /* Select2 Customization */
  .select2-container--default .select2-selection--single {
    height: calc(1.8125rem + 2px);
    padding: 0.25rem 0.5rem;
    border-radius: 0.2rem;
    border: 1px solid #e9ecef;
  }
  
  .select2-container--default .select2-selection--single .select2-selection__arrow {
    height: calc(1.8125rem + 2px);
  }
</style>

<div class="header bg-primary pb-6">
  <div class="container-fluid">
    <div class="header-body">
      <div class="row align-items-center py-4">
        <div class="col-lg-6 col-7">
          <h6 class="h2 text-white d-inline-block mb-0">Order Dashboard</h6>
          <nav aria-label="breadcrumb" class="d-none d-md-inline-block ml-md-4">
            <ol class="breadcrumb breadcrumb-links breadcrumb-dark">
              <li class="breadcrumb-item"><a href="/dashboard"><i class="fas fa-home"></i></a></li>
              <li class="breadcrumb-item active" aria-current="page">Orders</li>
            </ol>
          </nav>
        </div>
        <div class="col-lg-6 col-5 text-right">
          <a href="/orders/neworder" class="btn btn-success">
            <i class="fas fa-plus mr-2"></i> New Order
          </a>
        </div>
      </div>
      
      <!-- Enhanced Summary Cards -->
      <div class="row">
        <div class="col-xl-3 col-md-6 mb-4">
          <div class="card summary-card total h-100">
              <div class="card-body">
                  <div class="row no-gutters align-items-center">
                      <div class="col mr-2">
                          <div class="text-xs font-weight-bold text-white text-uppercase mb-1">
                              Total Orders</div>
                          <div class="h2 mb-0 font-weight-bold" id="totalOrders">0</div>
                          <div class="mt-2 text-xs">
                            <span class="text-white"><i class="fas fa-arrow-up mr-1"></i> 12.5% this month</span>
                          </div>
                      </div>
                      <div class="col-auto icon-wrapper">
                        <i class="fas fa-clipboard-list"></i>
                      </div>
                  </div>
              </div>
          </div>
        </div>
        
        <div class="col-xl-3 col-md-6 mb-4">
          <div class="card summary-card pending h-100">
              <div class="card-body">
                  <div class="row no-gutters align-items-center">
                      <div class="col mr-2">
                          <div class="text-xs font-weight-bold text-white text-uppercase mb-1">
                              Pending Orders</div>
                          <div class="h2 mb-0 font-weight-bold" id="pendingOrders">0</div>
                          <div class="mt-2 text-xs">
                            <span class="text-white"><i class="fas fa-arrow-down mr-1"></i> 3.2% from yesterday</span>
                          </div>
                      </div>
                      <div class="col-auto icon-wrapper">
                        <i class="fas fa-clock"></i>
                      </div>
                  </div>
              </div>
          </div>
        </div>
        
        <div class="col-xl-3 col-md-6 mb-4">
          <div class="card summary-card completed h-100">
              <div class="card-body">
                  <div class="row no-gutters align-items-center">
                      <div class="col mr-2">
                          <div class="text-xs font-weight-bold text-white text-uppercase mb-1">
                              Completed Today</div>
                          <div class="h2 mb-0 font-weight-bold" id="completedToday">0</div>
                          <div class="mt-2 text-xs">
                            <span class="text-white"><i class="fas fa-arrow-up mr-1"></i> 24.7% from yesterday</span>
                          </div>
                      </div>
                      <div class="col-auto icon-wrapper">
                        <i class="fas fa-check-circle"></i>
                      </div>
                  </div>
              </div>
          </div>
        </div>
        
        <div class="col-xl-3 col-md-6 mb-4">
          <div class="card summary-card cancelled h-100">
              <div class="card-body">
                  <div class="row no-gutters align-items-center">
                      <div class="col mr-2">
                          <div class="text-xs font-weight-bold text-white text-uppercase mb-1">
                              Cancelled Orders</div>
                          <div class="h2 mb-0 font-weight-bold" id="cancelledOrders">0</div>
                          <div class="mt-2 text-xs">
                            <span class="text-white"><i class="fas fa-arrow-down mr-1"></i> 8.1% this week</span>
                          </div>
                      </div>
                      <div class="col-auto icon-wrapper">
                        <i class="fas fa-times-circle"></i>
                      </div>
                  </div>
              </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="container-fluid mt--6">
  <div class="row">
    <div class="col">
      <!-- Filter Section -->
      <div class="filter-section">
        <h5 class="mb-4"><i class="fas fa-filter text-primary mr-2"></i>Filter Orders</h5>
        <div class="row" id="cardb">
          <div class="col-md-3 mb-3">
            <label class="form-label small font-weight-bold">Customer</label>
            <select class="form-control form-control-sm customer-code-js" id="customerFilter">
              <option value="">All Customers</option>
            </select>
          </div>
          
          <div class="col-md-3 mb-3" id="cardb">
            <label class="form-label small font-weight-bold">Sales Rep</label>
            <select class="form-control form-control-sm salesman-js" id="salesmanFilter">
              <option value="">All Sales Reps</option>
            </select>
          </div>
          
          <div class="col-md-3 mb-3">
            <label class="form-label small font-weight-bold">Truck</label>
            <select class="form-control form-control-sm truck-js" id="truckFilter">
              <option value="">All Trucks</option>
            </select>
          </div>
          
          <div class="col-md-3 mb-3">
            <label class="form-label small font-weight-bold">Status</label>
            <select class="form-control form-control-sm" id="statusFilter">
              <option value="">All Statuses</option>
              <option value="Pending">Pending</option>
              <option value="In Progress">In Progress</option>
              <option value="Completed">Completed</option>
              <option value="Cancelled">Cancelled</option>
            </select>
          </div>
          
          <div class="col-md-3 mb-3">
            <label class="form-label small font-weight-bold">From Date</label>
            <div class="date-input-group">
              <input type="date" class="form-control form-control-sm" id="fromDateFilter">
              <i class="fas fa-calendar-alt"></i>
            </div>
          </div>
          
          <div class="col-md-3 mb-3">
            <label class="form-label small font-weight-bold">To Date</label>
            <div class="date-input-group">
              <input type="date" class="form-control form-control-sm" id="toDateFilter">
              <i class="fas fa-calendar-alt"></i>
            </div>
          </div>
          
          <div class="col-md-3 mb-3 d-flex align-items-end">
            <button class="btn btn-sm btn-primary mr-2" id="applyFilters">
              <i class="fas fa-filter mr-1"></i> Apply
            </button>
            <button class="btn btn-sm btn-outline-secondary" id="resetFilters">
              <i class="fas fa-sync-alt mr-1"></i> Reset
            </button>
          </div>
        </div>
      </div>
      
      <!-- Orders Table -->
      <div class="card dashboard-card">
        <div class="card-header">
          <div class="row align-items-center">
            <div class="col">
              <h3 class="mb-0 text-white"><i class="fas fa-list-alt mr-2"></i>Recent Orders</h3>
            </div>
            <div class="col text-right">
              <button class="btn btn-sm btn-light" id="exportData">
                <i class="fas fa-file-export mr-1"></i> Export
              </button>
            </div>
          </div>
        </div>
        <div class="table-responsive">
          <table id="ordertable" class="table align-items-center table-flush">
            <thead class="thead-light">
              <tr>
                <th>Order ID</th>
                <th>Customer</th>
                <th>Date</th>
                <th>Truck</th>
                <th>Status</th>
                <th>Total</th>
                <th>Payment</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              <!-- Data will be loaded via DataTables -->
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Order Details Modal -->
<div class="modal fade" id="orderDetailsModal" tabindex="-1" role="dialog" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="orderDetailsModalLabel">Order Details</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body" id="orderDetailsContent">
        <!-- Content will be loaded dynamically -->
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="printInvoice">Print Invoice</button>
      </div>
    </div>
  </div>
</div>

<%- include('../includes/footer.ejs') -%>
<%- include('../includes/end.ejs') -%>

<!-- Include Select2 CSS -->

<!-- Include Select2 JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.8/js/select2.min.js" defer></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
$(document).ready(function() {
  // Initialize summary counters
  let summaryData = {
    total: 0,
    pending: 0,
    completed: 0,
    cancelled: 0
  };

  // Function to update summary cards
  function updateSummaryCards(data) {
    $('#totalOrders').text(data.total);
    $('#pendingOrders').text(data.pending);
    $('#completedToday').text(data.completed);
    $('#cancelledOrders').text(data.cancelled);
  }

  // Initialize DataTable with real data
  var datatable = $('#ordertable').DataTable({
    responsive: true,
    processing: true,
    serverSide: true,
    ajax: {
      url: '/getorders',
      dataSrc: 'docs',
      data: function(d) {
        // Add filter parameters
        d.customer = $('#customerFilter').val();
        d.salesman = $('#salesmanFilter').val();
        d.truck = $('#truckFilter').val();
        d.status = $('#statusFilter').val();
        d.fromDate = $('#fromDateFilter').val();
        d.toDate = $('#toDateFilter').val();
        
        return d;
      },
      dataFilter: function(data) {
        // Parse the response to get summary data
        var json = JSON.parse(data);
        if(json.summary) {
          summaryData = {
            total: json.summary.total || 0,
            pending: json.summary.pending || 0,
            completed: json.summary.completedToday || 0,
            cancelled: json.summary.cancelled || 0
          };
          updateSummaryCards(summaryData);
        }
        return JSON.stringify(json); // Return the original data for DataTables
      }
    },
    language: {
      paginate: {
        next: '<i class="fas fa-chevron-right"></i>',
        previous: '<i class="fas fa-chevron-left"></i>'
      },
      search: "_INPUT_",
      searchPlaceholder: "Search orders...",
      lengthMenu: "Show _MENU_ orders",
      info: "Showing _START_ to _END_ of _TOTAL_ orders"
    },
    columns: [
      { data: 'id', title: 'Order ID' },
      { data: 'name', title: 'Customer' },
      { 
        data: 'createdAt', 
        title: 'Date',
        render: function(data) {
          return new Date(data).toLocaleDateString();
        }
      },
      { data: 'truckId', title: 'Truck' },
      { 
        data: 'status', 
        title: 'Status',
        render: function(data) {
          let badgeClass = 'badge-secondary';
          if(data === 'Pending') badgeClass = 'badge-pending';
          if(data === 'Completed') badgeClass = 'badge-completed';
          if(data === 'Cancelled') badgeClass = 'badge-cancelled';
          if(data === 'In Progress') badgeClass = 'badge-in-progress';
          
          return `<span class="status-badge ${badgeClass}">${data}</span>`;
        }
      },
      { 
        data: 'totalPrice', 
        title: 'Total',
        render: function(data) {
          return data ? '$' + parseFloat(data).toFixed(2) : '$0.00';
        }
      },
      { 
        data: 'isCreditCustomerPaid', 
        title: 'Payment',
        render: function(data) {
          return data ? 'Paid' : 'Unpaid';
        }
      },
      { 
        data: null,
        orderable: false,
        searchable: false,
        render: function(data, type, row) {
          return `
            <button class="btn btn-action btn-view" data-id="${row._id}">View</button>
            <button class="btn btn-primary btn-sm edit-order" data-id="${row._id}">Edit</button>
          `;
        }
      }
    ],
    drawCallback: function(settings) {
      // Update summary cards after each draw
      if(settings.json && settings.json.summary) {
        updateSummaryCards({
          total: settings.json.summary.total || 0,
          pending: settings.json.summary.pending || 0,
          completed: settings.json.summary.completedToday || 0,
          cancelled: settings.json.summary.cancelled || 0
        });
      }
    }
  });

  // Initialize select2 dropdowns
  $('.customer-code-js').select2({
    placeholder: "Select Customer",
    allowClear: true,
    ajax: {
      url: "/customersee",
      dataType: "json",
      delay: 250,
      data: function(params) {
        return {
          search: params.term || "",
          customerName: $("#customerName").val() || ""
        };
      },
      processResults: function(data) {
        return {
          results: data.map(function(item) {
            return { id: item.id, text: item.id };
          }),
        };
      },
    }
  });

  $('.salesman-js').select2({
    dropdownParent: $("#cardb"),
    ajax: {
      url: '/salesmanids',
      dataType: 'json',
      delay: 250,
      processResults: function(data) {
        return {
          results: data.map(function(item) {
            return { id: item.id, text: item.id };
          }),
        };
      },
    }
  });

  $('.truck-js').select2({
    dropdownParent: $("#cardb"),
    ajax: {
      url: '/truckids',
      dataType: 'json',
      delay: 250,
      data: function(params) {
        return {
          search: params.term,
          customKey: 'utilities'
        };
      },
      processResults: function(data) {
        return {
          results: data.map(function(item) {
            return { id: item.id, text: item.id };
          }),
        };
      },
    }
  });

  // Apply filters button
  $('#applyFilters').click(function() {
    datatable.ajax.reload();
  });

  // Reset filters button
  $('#resetFilters').click(function() {
    $('#customerFilter').val(null).trigger('change');
    $('#salesmanFilter').val(null).trigger('change');
    $('#truckFilter').val(null).trigger('change');
    $('#statusFilter').val('');
    $('#fromDateFilter').val('');
    $('#toDateFilter').val('');
    datatable.ajax.reload();
  });

  // View order details
  $('#ordertable').on('click', '.btn-view', function() {
    const orderId = $(this).data('id');
    $.get(`/orders/${orderId}`, function(data) {
      // Format the order details for display
      const orderDate = new Date(data.createdAt).toLocaleDateString();
      const deliveryDate = data.deliveryDate ? new Date(data.deliveryDate).toLocaleDateString() : 'Not specified';
      
      let itemsHtml = '';
      if(data.items && data.items.length > 0) {
        data.items.forEach(item => {
          itemsHtml += `
            <tr>
              <td>${item.product || 'N/A'}</td>
              <td>${item.quantity || 0}</td>
              <td>${item.unitPrice ? '$' + parseFloat(item.unitPrice).toFixed(2) : '$0.00'}</td>
              <td>${item.total ? '$' + parseFloat(item.total).toFixed(2) : '$0.00'}</td>
            </tr>
          `;
        });
      }
      
      const orderDetails = `
        <div class="row mb-4">
          <div class="col-md-6">
            <h6 class="font-weight-bold">Customer Information</h6>
            <p>${data.name || 'N/A'}<br>
            ${data.address || 'N/A'}<br>
            ${data.phone || 'N/A'}</p>
          </div>
          <div class="col-md-6">
            <h6 class="font-weight-bold">Order Information</h6>
            <p>Order Date: ${orderDate}<br>
            Delivery Date: ${deliveryDate}<br>
            Truck: ${data.truckId || 'N/A'}<br>
            Status: <span class="badge ${getStatusBadgeClass(data.status)}">${data.status || 'N/A'}</span></p>
          </div>
        </div>
        
        <div class="table-responsive">
          <table class="table table-bordered">
            <thead class="thead-light">
              <tr>
                <th>Product</th>
                <th>Quantity</th>
                <th>Unit Price</th>
                <th>Total</th>
              </tr>
            </thead>
            <tbody>
              ${itemsHtml}
              <tr>
                <td colspan="3" class="text-right font-weight-bold">Subtotal</td>
                <td>${data.subtotal ? '$' + parseFloat(data.subtotal).toFixed(2) : '$0.00'}</td>
              </tr>
              <tr>
                <td colspan="3" class="text-right font-weight-bold">Delivery Fee</td>
                <td>${data.deliveryFee ? '$' + parseFloat(data.deliveryFee).toFixed(2) : '$0.00'}</td>
              </tr>
              <tr>
                <td colspan="3" class="text-right font-weight-bold">Total</td>
                <td>${data.totalPrice ? '$' + parseFloat(data.totalPrice).toFixed(2) : '$0.00'}</td>
              </tr>
            </tbody>
          </table>
        </div>
        
        <div class="row mt-4">
          <div class="col-md-6">
            <h6 class="font-weight-bold">Delivery Notes</h6>
            <p>${data.notes || 'No special instructions'}</p>
          </div>
          <div class="col-md-6">
            <h6 class="font-weight-bold">Payment Information</h6>
            <p>Status: <span class="badge ${data.isCreditCustomerPaid ? 'badge-success' : 'badge-warning'}">
              ${data.isCreditCustomerPaid ? 'Paid' : 'Unpaid'}</span><br>
            Method: ${data.modeOfPayment || 'N/A'}<br>
            ${data.transactionId ? 'Transaction ID: ' + data.transactionId : ''}</p>
          </div>
        </div>
      `;
      
      $('#orderDetailsContent').html(orderDetails);
      $('#orderDetailsModalLabel').text(`Order Details - ${data.id}`);
      $('#orderDetailsModal').modal('show');
    }).fail(function() {
      alert('Failed to load order details');
    });
  });

  // Edit order button
  $('#ordertable').on('click', '.edit-order', function() {
    const orderId = $(this).data('id');
    window.location.href = `/orders/edit/${orderId}`;
  });

  // Print invoice button
  $('#printInvoice').click(function() {
    // Implement print functionality
    window.print();
  });

  // Export data button
  $('#exportData').click(function() {
    // Implement export functionality
    alert('Export functionality will be implemented here');
  });

  // Helper function to get status badge class
  function getStatusBadgeClass(status) {
    switch(status) {
      case 'Pending': return 'badge-pending';
      case 'Completed': return 'badge-completed';
      case 'Cancelled': return 'badge-cancelled';
      case 'In Progress': return 'badge-in-progress';
      default: return 'badge-secondary';
    }
  }
});
</script>

/////////////////





<%- include('../includes/head.ejs') -%>
<%- include('../includes/navigation.ejs') -%>

<style>
  :root {
    --primary-color: #4d8da9;
    --secondary-color: #61A3C0;
    --success-color: #1cc88a;
    --info-color: #36b9cc;
    --warning-color: #f6c23e;
    --danger-color: #e74a3b;
    --light-color: #f8f9fc;
    --dark-color: #5a5c69;
  }

  /* Card Styles */
  .order-card {
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    border: none;
    margin-bottom: 20px;
  }
  
  .card-header {
    background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
    color: white;
    border-radius: 12px 12px 0 0 !important;
    padding: 1.25rem 1.5rem;
  }
  
  /* Tabs */
  .nav-tabs {
    border-bottom: 2px solid #dee2e6;
  }
  
  .nav-tabs .nav-link {
    border: none;
    color: #495057;
    font-weight: 500;
    padding: 0.75rem 1.5rem;
    border-radius: 0;
  }
  
  .nav-tabs .nav-link.active {
    color: var(--primary-color);
    border-bottom: 3px solid var(--primary-color);
    background-color: transparent;
  }
  
  /* Form Styles */
  .form-label {
    font-weight: 600;
    color: #525f7f;
  }
  
  /* Product Table */
  .product-table th {
    background-color: #f8f9fa;
    font-weight: 600;
    color: #525f7f;
  }
  
  /* Action Buttons */
  .btn-action {
    border-radius: 6px;
    font-weight: 500;
    font-size: 0.85rem;
    padding: 8px 12px;
    min-width: 90px;
    transition: all 0.2s ease;
  }
  
  .btn-add-product {
    background: linear-gradient(135deg, var(--success-color) 0%, #17a673 100%);
    color: white;
  }
  
  /* Summary Section */
  .order-summary {
    background-color: #f8f9fa;
    border-radius: 8px;
    padding: 20px;
    margin-top: 20px;
  }
  
  .summary-item {
    display: flex;
    justify-content: space-between;
    margin-bottom: 10px;
  }
  
  .summary-total {
    font-weight: 600;
    font-size: 1.1rem;
    color: var(--dark-color);
    border-top: 1px solid #dee2e6;
    padding-top: 10px;
  }
  
  /* Select2 Customization */
  .select2-container--default .select2-selection--single {
    height: calc(1.8125rem + 2px);
    padding: 0.25rem 0.5rem;
    border-radius: 0.2rem;
    border: 1px solid #e9ecef;
  }
  
  .select2-container--default .select2-selection--single .select2-selection__arrow {
    height: calc(1.8125rem + 2px);
  }
</style>

<%- include('../includes/header.ejs') -%>
<%- include('../components/searchbartr.ejs') -%>
</div>
</div>
</div>
</div>
</div>

<div class="container-fluid mt--6">
  <div class="row">
    <div class="col">
      <div class="card order-card">
        <div class="card-header">
          <h3 class="mb-0 text-white">Update Order #<%= order.id %></h3>
        </div>
        <div class="card-body">
          <form action="/updateorder" method="POST" id="orderForm">
            <input type="hidden" name="orderId" value="<%= order._id %>">
            
            <div class="row mb-4">
              <div class="col-md-6">
                <div class="form-group">
                  <label for="customerName" class="form-label">Customer Name</label>
                  <select class="customer-name-js form-control" id="customerName" name="name" required>
                    <option value="<%= order.name %>"><%= order.name %></option>
                  </select>
                </div>
              </div>
              
              <div class="col-md-6">
                <div class="form-group">
                  <label for="customerCode" class="form-label">Customer Code</label>
                  <select class="customer-code-js form-control" id="customerCode" name="customerId" required>
                    <option value="<%= order.customerId %>"><%= order.customerId %></option>
                  </select>
                </div>
              </div>
            </div>
            
            <div class="row mb-4">
              <div class="col-md-4">
                <div class="form-group">
                  <label for="truckId" class="form-label">Truck ID</label>
                  <select class="truck-js form-control" id="truckId" name="truckId" required>
                    <option value="<%= order.truckId %>"><%= order.truckId %></option>
                  </select>
                </div>
              </div>
              
              <div class="col-md-4">
                <div class="form-group">
                  <label for="zone" class="form-label">Zone</label>
                  <select class="zone-js form-control" id="zone" name="area">
                    <option value="<%= order.area %>"><%= order.area %></option>
                  </select>
                </div>
              </div>
              
              <div class="col-md-4">
                <div class="form-group">
                  <label for="status" class="form-label">Order Status</label>
                  <select class="form-control" id="status" name="status">
                    <option value="PENDING" <%= order.status === 'PENDING' ? 'selected' : '' %>>Pending</option>
                    <option value="IN_PROGRESS" <%= order.status === 'IN_PROGRESS' ? 'selected' : '' %>>In Progress</option>
                    <option value="COMPLETED" <%= order.status === 'COMPLETED' ? 'selected' : '' %>>Completed</option>
                    <option value="CANCELLED" <%= order.status === 'CANCELLED' ? 'selected' : '' %>>Cancelled</option>
                  </select>
                </div>
              </div>
            </div>
            
            <!-- Tab Navigation -->
            <ul class="nav nav-tabs" id="orderTabs" role="tablist">
              <li class="nav-item">
                <a class="nav-link active" id="products-tab" data-toggle="tab" href="#products" role="tab" aria-controls="products" aria-selected="true">Products</a>
              </li>
              <li class="nav-item">
                <a class="nav-link" id="payments-tab" data-toggle="tab" href="#payments" role="tab" aria-controls="payments" aria-selected="false">Payments</a>
              </li>
            </ul>
            
            <!-- Tab Content -->
            <div class="tab-content" id="orderTabsContent">
              <!-- Products Tab -->
              <div class="tab-pane fade show active" id="products" role="tabpanel" aria-labelledby="products-tab">
                <div class="mt-4">
                  <button type="button" class="btn btn-add-product mb-3" id="addProductBtn">
                    <i class="fas fa-plus mr-2"></i> Add Product
                  </button>
                  
                  <div class="table-responsive">
                    <table class="table product-table" id="productsTable">
                      <thead>
                        <tr>
                          <th>Product Name</th>
                          <th>Type</th>
                          <th>Quantity</th>
                          <th>Lend/Return</th>
                          <th>Price</th>
                          <th>Total</th>
                          <th>Action</th>
                        </tr>
                      </thead>
                      <tbody>
                        <% if(order.productDetails && order.productDetails.length > 0) { %>
                          <% order.productDetails.forEach(product => { %>
                            <tr>
                              <td>
                                <input type="text" class="form-control" name="productDetails[<%= product._id %>][productname]" value="<%= product.productname %>" required>
                              </td>
                              <td>
                                <select class="form-control" name="productDetails[<%= product._id %>][type]">
                                  <option value="Bottle" <%= product.type === 'Bottle' ? 'selected' : '' %>>Bottle</option>
                                  <option value="Dispenser" <%= product.type === 'Dispenser' ? 'selected' : '' %>>Dispenser</option>
                                  <option value="Accessory" <%= product.type === 'Accessory' ? 'selected' : '' %>>Accessory</option>
                                </select>
                              </td>
                              <td>
                                <input type="number" class="form-control quantity-input" name="productDetails[<%= product._id %>][quantity]" value="<%= product.quantity %>" min="1" required>
                              </td>
                              <td>
                                <select class="form-control" name="productDetails[<%= product._id %>][lrndtype]">
                                  <option value="Lend" <%= product.lrndtype === 'Lend' ? 'selected' : '' %>>Lend</option>
                                  <option value="Return" <%= product.lrndtype === 'Return' ? 'selected' : '' %>>Return</option>
                                </select>
                              </td>
                              <td>
                                <input type="number" class="form-control price-input" name="productDetails[<%= product._id %>][price]" value="<%= product.price %>" min="0" step="0.01" required>
                              </td>
                              <td class="total-cell">
                                <%= (product.quantity * product.price).toFixed(2) %>
                              </td>
                              <td>
                                <button type="button" class="btn btn-danger btn-sm remove-product">
                                  <i class="fas fa-trash"></i>
                                </button>
                              </td>
                            </tr>
                          <% }); %>
                        <% } else { %>
                          <tr id="noProductsRow">
                            <td colspan="7" class="text-center">No products added yet</td>
                          </tr>
                        <% } %>
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
              
              <!-- Payments Tab -->
              <div class="tab-pane fade" id="payments" role="tabpanel" aria-labelledby="payments-tab">
                <div class="mt-4">
                  <% if(order.isCredit) { %>
                    <button type="button" class="btn btn-add-product mb-3" id="addPaymentBtn">
                      <i class="fas fa-plus mr-2"></i> Add Payment
                    </button>
                  <% } else { %>
                    <div class="alert alert-info">
                      This is a cash order. No payment history available.
                    </div>
                  <% } %>
                  
                  <div class="table-responsive">
                    <table class="table product-table" id="paymentsTable">
                      <thead>
                        <tr>
                          <th>Payment Date</th>
                          <th>Amount</th>
                          <th>Salesman ID</th>
                          <th>Payment Mode</th>
                          <th>Action</th>
                        </tr>
                      </thead>
                      <tbody>
                        <% if(order.creditOrderHistory && order.creditOrderHistory.length > 0) { %>
                          <% order.creditOrderHistory.forEach(payment => { %>
                            <tr>
                              <td><%= new Date(payment.createdAt).toLocaleDateString() %></td>
                              <td><%= payment.creditAmountPaid.toFixed(2) %></td>
                              <td><%= payment.salesmanid %></td>
                              <td><%= payment.modeOfPayment %></td>
                              <td>
                                <button type="button" class="btn btn-danger btn-sm remove-payment" data-id="<%= payment._id %>">
                                  <i class="fas fa-trash"></i>
                                </button>
                              </td>
                            </tr>
                          <% }); %>
                        <% } else if(order.isCredit) { %>
                          <tr id="noPaymentsRow">
                            <td colspan="5" class="text-center">No payment history available</td>
                          </tr>
                        <% } %>
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
            </div>
            
            <!-- Order Summary -->
            <div class="order-summary">
              <h5 class="mb-3">Order Summary</h5>
              <div class="summary-item">
                <span>Subtotal:</span>
                <span id="subtotalAmount"><%= order.productDetails ? order.productDetails.reduce((sum, p) => sum + (p.quantity * p.price), 0).toFixed(2) : '0.00' %></span>
              </div>
              <div class="summary-item">
                <span>Delivery Fee:</span>
                <input type="number" class="form-control form-control-sm" id="deliveryFee" name="deliveryFee" value="0.00" min="0" step="0.01" style="width: 100px; display: inline-block;">
              </div>
              <% if(order.isCredit) { %>
                <div class="summary-item">
                  <span>Credit Amount Paid:</span>
                  <span id="creditPaidAmount"><%= order.creditAmountPaid ? order.creditAmountPaid.toFixed(2) : '0.00' %></span>
                </div>
                <div class="summary-item">
                  <span>Credit Balance:</span>
                  <span id="creditBalanceAmount">
                    <%= (order.productDetails.reduce((sum, p) => sum + (p.quantity * p.price), 0) - (order.creditAmountPaid || 0) %>
                  </span>
                </div>
              <% } %>
              <div class="summary-item summary-total">
                <span>Total Amount:</span>
                <span id="totalAmount"><%= order.productDetails ? order.productDetails.reduce((sum, p) => sum + (p.quantity * p.price), 0).toFixed(2) : '0.00' %></span>
              </div>
            </div>
            
            <div class="mt-4">
              <button type="submit" class="btn btn-success">
                <i class="fas fa-save mr-2"></i> Update Order
              </button>
              <button type="button" class="btn btn-danger" id="deleteOrderBtn" data-id="<%= order._id %>">
                <i class="fas fa-trash mr-2"></i> Delete Order
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Add Product Modal -->
<div class="modal fade" id="addProductModal" tabindex="-1" role="dialog" aria-labelledby="addProductModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addProductModalLabel">Add New Product</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <form id="productForm">
          <div class="form-group">
            <label for="productName">Product Name</label>
            <input type="text" class="form-control" id="productName" required>
          </div>
          <div class="form-group">
            <label for="productType">Type</label>
            <select class="form-control" id="productType" required>
              <option value="Bottle">Bottle</option>
              <option value="Dispenser">Dispenser</option>
              <option value="Accessory">Accessory</option>
            </select>
          </div>
          <div class="form-group">
            <label for="productQuantity">Quantity</label>
            <input type="number" class="form-control" id="productQuantity" min="1" value="1" required>
          </div>
          <div class="form-group">
            <label for="productLendType">Lend/Return</label>
            <select class="form-control" id="productLendType" required>
              <option value="Lend">Lend</option>
              <option value="Return">Return</option>
            </select>
          </div>
          <div class="form-group">
            <label for="productPrice">Price</label>
            <input type="number" class="form-control" id="productPrice" min="0" step="0.01" required>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" id="saveProductBtn">Add Product</button>
      </div>
    </div>
  </div>
</div>

<!-- Add Payment Modal -->
<div class="modal fade" id="addPaymentModal" tabindex="-1" role="dialog" aria-labelledby="addPaymentModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addPaymentModalLabel">Add New Payment</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <form id="paymentForm">
          <div class="form-group">
            <label for="paymentAmount">Amount</label>
            <input type="number" class="form-control" id="paymentAmount" min="0" step="0.01" required>
          </div>
          <div class="form-group">
            <label for="paymentSalesman">Salesman ID</label>
            <input type="text" class="form-control" id="paymentSalesman" required>
          </div>
          <div class="form-group">
            <label for="paymentMode">Payment Mode</label>
            <select class="form-control" id="paymentMode" required>
              <option value="Cash">Cash</option>
              <option value="Credit Card">Credit Card</option>
              <option value="Bank Transfer">Bank Transfer</option>
              <option value="Check">Check</option>
            </select>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" id="savePaymentBtn">Add Payment</button>
      </div>
    </div>
  </div>
</div>

<%- include('../includes/footer.ejs') -%>
<%- include('../includes/end.ejs') -%>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.8/js/select2.min.js"></script>

<script>
$(document).ready(function() {
  // Initialize Select2 dropdowns
  $('.zone-js').select2({
    dropdownParent: $("#cardb"),
    ajax: {
      url: '/zoneids',
      dataType: 'json',
      delay: 250,
      data: function(params) {
        return {
          q: params.term,
          truckid: $('.truck-js').val()
        };
      },
      processResults: function(data) {
        return {
          results: data.map(function(item) {
            return { id: item.id, text: item.id };
          }),
        };
      },
    }
  });

  $('.truck-js').select2({
    dropdownParent: $("#cardb"),
    ajax: {
      url: '/truckids',
      dataType: 'json',
      delay: 250,
      data: function(params) {
        return {
          search: params.term,
          customKey: 'utilities'
        };
      },
      processResults: function(data) {
        return {
          results: data.map(function(item) {
            return { id: item.id, text: item.id };
          }),
        };
      },
    }
  });

  $(".customer-name-js").select2({
    placeholder: "Select Customer Name",
    allowClear: true,
    ajax: {
      url: "/customersee",
      dataType: "json",
      delay: 250,
      data: function(params) {
        return {
          search: params.term || "",
          customerId: $("#customerCode").val() || ""
        };
      },
      processResults: function(data) {
        return {
          results: data.map(function(item) {
            return { id: item.name, text: item.name };
          }),
        };
      },
    }
  });

  $(".customer-code-js").select2({
    placeholder: "Select Customer Code",
    allowClear: true,
    ajax: {
      url: "/customersee",
      dataType: "json",
      delay: 250,
      data: function(params) {
        return {
          search: params.term || "",
          customerName: $("#customerName").val() || ""
        };
      },
      processResults: function(data) {
        return {
          results: data.map(function(item) {
            return { id: item.id, text: item.id };
          }),
        };
      },
    }
  });

  // Calculate totals when quantity or price changes
  $(document).on('change', '.quantity-input, .price-input', function() {
    const row = $(this).closest('tr');
    const quantity = parseFloat(row.find('.quantity-input').val()) || 0;
    const price = parseFloat(row.find('.price-input').val()) || 0;
    const total = (quantity * price).toFixed(2);
    row.find('.total-cell').text(total);
    updateOrderSummary();
  });

  // Add Product Button
  $('#addProductBtn').click(function() {
    $('#addProductModal').modal('show');
  });

  // Save Product Button
  $('#saveProductBtn').click(function() {
    const productName = $('#productName').val();
    const productType = $('#productType').val();
    const productQuantity = $('#productQuantity').val();
    const productLendType = $('#productLendType').val();
    const productPrice = $('#productPrice').val();
    
    if(!productName || !productQuantity || !productPrice) {
      alert('Please fill all required fields');
      return;
    }
    
    // Generate a unique ID for the new product
    const productId = 'prod_' + Date.now();
    
    // Add new row to the table
    const newRow = `
      <tr>
        <td>
          <input type="text" class="form-control" name="productDetails[${productId}][productname]" value="${productName}" required>
        </td>
        <td>
          <select class="form-control" name="productDetails[${productId}][type]">
            <option value="Bottle" ${productType === 'Bottle' ? 'selected' : ''}>Bottle</option>
            <option value="Dispenser" ${productType === 'Dispenser' ? 'selected' : ''}>Dispenser</option>
            <option value="Accessory" ${productType === 'Accessory' ? 'selected' : ''}>Accessory</option>
          </select>
        </td>
        <td>
          <input type="number" class="form-control quantity-input" name="productDetails[${productId}][quantity]" value="${productQuantity}" min="1" required>
        </td>
        <td>
          <select class="form-control" name="productDetails[${productId}][lrndtype]">
            <option value="Lend" ${productLendType === 'Lend' ? 'selected' : ''}>Lend</option>
            <option value="Return" ${productLendType === 'Return' ? 'selected' : ''}>Return</option>
          </select>
        </td>
        <td>
          <input type="number" class="form-control price-input" name="productDetails[${productId}][price]" value="${productPrice}" min="0" step="0.01" required>
        </td>
        <td class="total-cell">
          ${(productQuantity * productPrice).toFixed(2)}
        </td>
        <td>
          <button type="button" class="btn btn-danger btn-sm remove-product">
            <i class="fas fa-trash"></i>
          </button>
        </td>
      </tr>
    `;
    
    if($('#noProductsRow').length) {
      $('#noProductsRow').remove();
    }
    
    $('#productsTable tbody').append(newRow);
    $('#addProductModal').modal('hide');
    $('#productForm')[0].reset();
    updateOrderSummary();
  });

  // Remove Product Button
  $(document).on('click', '.remove-product', function() {
    $(this).closest('tr').remove();
    if($('#productsTable tbody tr').length === 0) {
      $('#productsTable tbody').append('<tr id="noProductsRow"><td colspan="7" class="text-center">No products added yet</td></tr>');
    }
    updateOrderSummary();
  });

  // Add Payment Button
  $('#addPaymentBtn').click(function() {
    $('#addPaymentModal').modal('show');
  });

  // Save Payment Button
  $('#savePaymentBtn').click(function() {
    const paymentAmount = $('#paymentAmount').val();
    const paymentSalesman = $('#paymentSalesman').val();
    const paymentMode = $('#paymentMode').val();
    
    if(!paymentAmount || !paymentSalesman || !paymentMode) {
      alert('Please fill all required fields');
      return;
    }
    
    // Add new row to the payments table
    const newRow = `
      <tr>
        <td>${new Date().toLocaleDateString()}</td>
        <td>${parseFloat(paymentAmount).toFixed(2)}</td>
        <td>${paymentSalesman}</td>
        <td>${paymentMode}</td>
        <td>
          <button type="button" class="btn btn-danger btn-sm remove-payment">
            <i class="fas fa-trash"></i>
          </button>
        </td>
      </tr>
    `;
    
    if($('#noPaymentsRow').length) {
      $('#noPaymentsRow').remove();
    }
    
    $('#paymentsTable tbody').append(newRow);
    $('#addPaymentModal').modal('hide');
    $('#paymentForm')[0].reset();
    updateOrderSummary();
  });

  // Remove Payment Button
  $(document).on('click', '.remove-payment', function() {
    $(this).closest('tr').remove();
    if($('#paymentsTable tbody tr').length === 0) {
      $('#paymentsTable tbody').append('<tr id="noPaymentsRow"><td colspan="5" class="text-center">No payment history available</td></tr>');
    }
  });

  // Delete Order Button
  $('#deleteOrderBtn').click(function() {
    const orderId = $(this).data('id');
    
    if(!confirm('Are you sure you want to delete this order?')) {
      return;
    }
    
    $.ajax({
      url: '/delete-order',
      method: 'POST',
      data: { id: orderId },
      success: function(response) {
        if(response.success) {
          alert('Order deleted successfully!');
          window.location.href = '/orders';
        } else {
          alert('Failed to delete order: ' + response.message);
        }
      },
      error: function() {
        alert('An error occurred while deleting the order.');
      }
    });
  });

  // Update Order Summary
  function updateOrderSummary() {
    let subtotal = 0;
    
    $('#productsTable tbody tr').each(function() {
      if($(this).attr('id') !== 'noProductsRow') {
        const quantity = parseFloat($(this).find('.quantity-input').val()) || 0;
        const price = parseFloat($(this).find('.price-input').val()) || 0;
        subtotal += quantity * price;
      }
    });
    
    const deliveryFee = parseFloat($('#deliveryFee').val()) || 0;
    const total = subtotal + deliveryFee;
    
    $('#subtotalAmount').text(subtotal.toFixed(2));
    $('#totalAmount').text(total.toFixed(2));
    
    // If credit order, update credit balance
    if(<%= order.isCredit %>) {
      let creditPaid = 0;
      
      $('#paymentsTable tbody tr').each(function() {
        if($(this).attr('id') !== 'noPaymentsRow') {
          const amount = parseFloat($(this).find('td:eq(1)').text()) || 0;
          creditPaid += amount;
        }
      });
      
      const creditBalance = subtotal - creditPaid;
      
      $('#creditPaidAmount').text(creditPaid.toFixed(2));
      $('#creditBalanceAmount').text(creditBalance.toFixed(2));
    }
  }

  // Initialize order summary
  updateOrderSummary();
});
</script>